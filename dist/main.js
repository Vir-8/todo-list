(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(537),a=t.n(o),i=t(645),s=t.n(i)()(a());s.push([n.id,"* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: grey;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: rgb(138, 138, 138);\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 250px;\n    padding: 20px;\n    gap: 20px;\n    background-color: rgb(48, 48, 48);\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button {\n    padding: 8px;\n}\n\n.highlight-button {\n    background-color: red;\n}\n\n#content {\n    width: calc(100vw - 250px);\n    height: calc(100vh - 55px);\n    margin-left: 250px;\n    background-color: rgb(163, 163, 163);\n\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 15px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n#content .contentHeader {\n    display: flex;\n    min-height: 50px;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: calc(100vw - 270px);\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 50px;\n    width: calc(100vw - 270px);\n    background-color: rgb(219, 218, 218);\n    vertical-align: middle;\n}\n\n.newTaskForm {\n    display: block;\n    position: absolute;\n    visibility: hidden;\n    height: 50px;\n    width: calc(100vw - 270px);\n    border: 1px solid black;\n}\n\n.newTaskForm h1 {\n    margin-top: 0px;\n}\n\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    border: 1px solid black;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    border: 1px solid red;\n}\n\n.subTaskContainer .subTaskDone {\n    background-color: aquamarine;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid red;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n.projectButtons {\n    display: flex;\n}\n\n.projectButtons button {\n    flex: 1;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;;IAEX,sBAAsB;;IAEtB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,kBAAkB;IAClB,qGAAqG;AACzG;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,eAAe;IACf,0BAA0B;IAC1B,YAAY;IACZ,aAAa;IACb,SAAS;IACT,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,0BAA0B;IAC1B,0BAA0B;IAC1B,kBAAkB;IAClB,oCAAoC;;IAEpC,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,0BAA0B;IAC1B,oCAAoC;IACpC,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,0BAA0B;IAC1B,uBAAuB;AAC3B;;AAEA;IACI,eAAe;AACnB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,4BAA4B;AAChC;;;;;;AAMA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,iBAAiB;IACjB,yBAAyB;IACzB,4BAA4B;IAC5B,6BAA6B;AACjC;;;AAGA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,YAAY;AAChB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;AACrB;;;;AAIA;IACI,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: grey;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: rgb(138, 138, 138);\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 250px;\n    padding: 20px;\n    gap: 20px;\n    background-color: rgb(48, 48, 48);\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button {\n    padding: 8px;\n}\n\n.highlight-button {\n    background-color: red;\n}\n\n#content {\n    width: calc(100vw - 250px);\n    height: calc(100vh - 55px);\n    margin-left: 250px;\n    background-color: rgb(163, 163, 163);\n\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 15px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n#content .contentHeader {\n    display: flex;\n    min-height: 50px;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: calc(100vw - 270px);\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 50px;\n    width: calc(100vw - 270px);\n    background-color: rgb(219, 218, 218);\n    vertical-align: middle;\n}\n\n.newTaskForm {\n    display: block;\n    position: absolute;\n    visibility: hidden;\n    height: 50px;\n    width: calc(100vw - 270px);\n    border: 1px solid black;\n}\n\n.newTaskForm h1 {\n    margin-top: 0px;\n}\n\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    border: 1px solid black;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    border: 1px solid red;\n}\n\n.subTaskContainer .subTaskDone {\n    background-color: aquamarine;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid red;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n.projectButtons {\n    display: flex;\n}\n\n.projectButtons button {\n    flex: 1;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}"],sourceRoot:""}]);const l=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(s[c]=!0)}for(var r=0;r<n.length;r++){var A=[].concat(n[r]);o&&s[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},s=[],l=0;l<n.length;l++){var c=n[l],r=o.base?c[0]+o.base:c[0],A=i[r]||0,d="".concat(r," ").concat(A);i[r]=A+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=a(p,o);o.byIndex=l,e.splice(l,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var l=t(i[s]);e[l].references--}for(var c=o(n,a),r=0;r<i.length;r++){var A=t(i[r]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{nf:()=>j,j0:()=>D,el:()=>E,tJ:()=>I,GI:()=>L,kv:()=>q,dT:()=>Y,X1:()=>w,Ts:()=>v,K9:()=>S,z2:()=>T,ot:()=>h});var n=t(379),e=t.n(n),a=t(795),i=t.n(a),s=t(569),l=t.n(s),c=t(565),r=t.n(c),A=t(216),d=t.n(A),u=t(589),p=t.n(u),m=t(426),f={};f.styleTagTransform=p(),f.setAttributes=r(),f.insert=l().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=d(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const g=n=>{h.textContent="",I.textContent="",function(n){let e=document.createElement("button");e.textContent="new button!",e.onclick=function(){!function(n,e){var t=n.getBoundingClientRect(),o=t.top,a=t.left;w.style.top=o+"px",w.style.left=a+"px",n.style.display="none",w.style.visibility="visible",w.onsubmit=function(t){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let o=document.createElement("div");o.classList.add("subTaskContainer");let a=document.createElement("input");a.type="checkbox",t.append(a);let i=document.createElement("input");i.type="text",i.value=document.getElementById("taskName").value,t.append(i);let s=document.createElement("input");s.type="date",s.value=document.getElementById("taskDate").value,t.append(s);let l={id:n.tasks.length,taskDate:x(),subTasks:[],mainTaskDiv:e,newTaskDiv:t,subTaskDiv:o};s.addEventListener("change",(function(){let n=new Date(s.value);l.taskDate=n})),a.addEventListener("change",(function(){if(a.checked){let e=n.id,t=n.tasks.indexOf(l);t>-1&&q[e].tasks.splice(t,1),B(n)}})),C(l),n.tasks.push(l),B(n)}(e),n.style.display="block",w.reset(),w.style.visibility="hidden",t.preventDefault()},E.onclick=function(e){console.log("cancel task clicked"),n.style.display="block",w.reset(),w.style.visibility="hidden",e.preventDefault()}}(e,n)},e.classList.add("newTaskButton"),I.append(e)}(n),B(n)};function B(n){h.textContent="";for(let e=0;e<n.tasks.length;e++){let t=n.tasks[e],o=t.mainTaskDiv,a=t.newTaskDiv,i=t.subTaskDiv;o.append(a),o.append(i),h.append(o)}}function C(n){n.newTaskDiv.addEventListener("contextmenu",(function(e){e.preventDefault(),L.style.display="block",L.style.left=`${e.pageX}px`,L.style.top=`${e.pageY}px`;const t=L.querySelector("#menu-item-1"),o=L.querySelector("#menu-item-2");t.onclick=function(){(function(n){n.subTaskDiv.insertAdjacentElement("afterend",T),T.style.display="block",T.onsubmit=function(e){console.log("submit subtask clicked"),function(n){let e=document.createElement("div");e.classList.add("subTask");let t=document.createElement("input");t.type="checkbox",e.append(t);let o=document.createElement("input");o.type="text",o.value=document.getElementById("subTaskName").value,e.append(o),e.setAttribute("data-index",n.subTasks.length),n.subTasks.push(e),n.subTaskDiv.append(e),t.addEventListener("change",(function(){t.checked?(e.classList.add("subTaskDone"),console.log(Y)):e.classList.remove("subTaskDone")})),T.reset(),T.style.display="none",console.log(n.subTasks)}(n),e.preventDefault()},D.onclick=function(n){console.log("cancel task clicked"),n.preventDefault()}})(n),L.style.display="none"},o.onclick=function(){if(Y.includes(n))Y.splice(n.id,1),b();else{let e=n.id,t=q.find((e=>e.tasks&&e.tasks.includes(n)));e>-1&&q[t.id].tasks.splice(e,1),B(t)}L.style.display="none"},document.body.appendChild(L)}))}function x(){let n=document.getElementById("taskDate").value;return new Date(n)}const b=()=>{I.textContent="",function(){let n=document.createElement("button");n.textContent="new button!",n.onclick=function(){!function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left;w.style.top=t+"px",w.style.left=o+"px",n.style.display="none",w.style.visibility="visible",w.onsubmit=function(e){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let o=document.createElement("input");o.type="checkbox",t.append(o);let a=document.createElement("input");a.type="text",a.value=document.getElementById("taskName").value,t.append(a);let i=document.createElement("input");i.type="date",i.value=document.getElementById("taskDate").value,t.append(i),i.addEventListener("change",(function(){let n=new Date(i.value);l.taskDate=n}));let s=document.createElement("div");s.classList.add("subTaskContainer");let l={id:Y.length,mainTaskDiv:e,newTaskDiv:t,subTaskDiv:s,taskDate:x(),subTasks:[]};C(l),Y.push(l),o.addEventListener("change",(function(){o.checked&&(Y.splice(l.id,1),b(),console.log(Y))})),document.getElementById("taskName").value="",w.style.visibility="hidden",n.style.display="block",b(),console.log(Y)}(n),e.preventDefault()},E.onclick=function(e){console.log("cancel task clicked"),e.preventDefault(),function(n){n.style.display="block",w.style.visibility="hidden"}(n)}}(n)},n.classList.add("newTaskButton"),I.append(n)}(),function(){h.textContent="";for(let n=0;n<Y.length;n++){let e=Y[n].mainTaskDiv,t=Y[n].newTaskDiv,o=Y[n].subTaskDiv;e.append(t),e.append(o),h.append(e),console.log(Y[n])}}()};function k(){let n=document.querySelectorAll(".sideBarButton");n.forEach((e=>{e.onclick=()=>{n=document.querySelectorAll(".sideBarButton"),n.forEach((n=>n.classList.remove("highlight-button"))),e.classList.add("highlight-button")}}))}function y(n){S.reset(),S.style.display="none",n.preventDefault()}document.querySelector("#content");const I=document.querySelector(".contentHeader"),h=(document.querySelector(".taskContainer"),document.querySelector(".taskList")),v=document.getElementById("projectContainer"),w=document.querySelector(".newTaskForm"),E=(document.getElementById("submitNewTask"),document.getElementById("cancelTask")),T=document.querySelector(".subTaskForm"),D=(document.getElementById("submitSubTask"),document.getElementById("cancelSubTask")),S=document.querySelector(".projectForm"),j=(document.getElementById("addProject"),document.getElementById("cancelProject")),L=document.getElementById("custom-menu"),Y=[],q=[];document.querySelector(".inbox").addEventListener("click",b),document.querySelector(".today").addEventListener("click",(()=>{h.textContent="";let n=new Date;console.log("todayDate is "+n);for(let e=0;e<Y.length;e++){let t=Y[e],o=t.taskDate;if(console.log("this task data-date is "+o),n.getFullYear()===o.getFullYear()&&n.getMonth()===o.getMonth()&&n.getDate()===o.getDate()){let n=t.mainTaskDiv,e=t.newTaskDiv,o=t.subTaskDiv;n.append(e),n.append(o),h.append(n)}}})),document.querySelector(".week").addEventListener("click",(()=>{h.textContent="";let n=new Date,e=n.getDay(),t=new Date(n);t.setDate(n.getDate()-e+1),t.setHours(0,0,0,0);let o=new Date(n);o.setDate(n.getDate()+(6-e)+1),o.setHours(23,59,59,999),console.log("todayDate is "+n),console.log("week start is "+t+" and week end is "+o);for(let n=0;n<Y.length;n++){let e=Y[n],a=e.taskDate;if(console.log("this task data-date is "+a),a>=t&&a<=o){let n=e.mainTaskDiv,t=e.newTaskDiv,o=e.subTaskDiv;n.append(t),n.append(o),h.append(n)}}})),document.querySelector(".newProject").onclick=function(){S.style.display="flex",S.onsubmit=function(n){!function(){let n=document.createElement("button");n.classList.add("newProject"),n.classList.add("sideBarButton"),n.textContent=document.getElementById("projectName").value;let e={id:q.length,tasks:[]};v.append(n),q.push(e),k(),n.addEventListener("click",(function(){g(e)}))}(),S.reset(),n.preventDefault()},j.onclick=y},k(),console.log("works lol")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,