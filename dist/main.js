(()=>{"use strict";var n={602:(n,e,t)=>{t.d(e,{Z:()=>r});var o=t(537),a=t.n(o),i=t(645),s=t.n(i)()(a());s.push([n.id,"* {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 25vw;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button, #projectContainer button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover, #projectContainer button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button, #projectContainer .highlight-button  {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover, #projectContainer .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 25vw);\n\n    color: white;\n    margin-left: 25vw;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    border-bottom: 1px solid white;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%;\n    border-top: 2px solid white;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 40px;\n    width: 100%;\n    background-color: #d4d4d812;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n    padding-left: 15px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.newTask input[type=checkbox] {\n    margin-left: 10px;\n    width: 20px;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n    background-color: #d4d4d812;\n}\n\n.formElement {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n}\n\n.formElement input {\n    height: 40px;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.formElement input[type=text] {\n    width: 70%;\n}\n\n.formElement input[type=date] {\n    width: 30%;\n}\n\n.formElement button {\n    height: 25px;\n    width: 50%;\n}\n \n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n    width: 100%;\n}\n\n.subTaskForm .subTaskFormContainer {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    margin-left: 35px;\n    color: white;\n}\n\n.subTaskFormContainer input[type=text] {\n    width: 60%;\n    font-size: 15px;\n}\n\n.subTaskFormContainer button {\n    width: 20%;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-left: 35px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    background-color: #d4d4d812;\n    border-top: 1px solid #ffffff75;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 15px;\n    font-family: 'Open Sans';\n}\n\n.subTask input[type=checkbox] {\n    margin-left: 10px;\n    margin-right: 20px;\n    width: 15px;\n}\n\n.subTaskContainer .subTaskDone input {\n    text-decoration: line-through;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["* {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 25vw;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button, #projectContainer button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover, #projectContainer button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button, #projectContainer .highlight-button  {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover, #projectContainer .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 25vw);\n\n    color: white;\n    margin-left: 25vw;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    border-bottom: 1px solid white;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%;\n    border-top: 2px solid white;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 40px;\n    width: 100%;\n    background-color: #d4d4d812;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n    padding-left: 15px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.newTask input[type=checkbox] {\n    margin-left: 10px;\n    width: 20px;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n    background-color: #d4d4d812;\n}\n\n.formElement {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n}\n\n.formElement input {\n    height: 40px;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.formElement input[type=text] {\n    width: 70%;\n}\n\n.formElement input[type=date] {\n    width: 30%;\n}\n\n.formElement button {\n    height: 25px;\n    width: 50%;\n}\n \n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n    width: 100%;\n}\n\n.subTaskForm .subTaskFormContainer {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    margin-left: 35px;\n    color: white;\n}\n\n.subTaskFormContainer input[type=text] {\n    width: 60%;\n    font-size: 15px;\n}\n\n.subTaskFormContainer button {\n    width: 20%;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-left: 35px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    background-color: #d4d4d812;\n    border-top: 1px solid #ffffff75;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 15px;\n    font-family: 'Open Sans';\n}\n\n.subTask input[type=checkbox] {\n    margin-left: 10px;\n    margin-right: 20px;\n    width: 15px;\n}\n\n.subTaskContainer .subTaskDone input {\n    text-decoration: line-through;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}"],sourceRoot:""}]);const r=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var r=0;r<this.length;r++){var l=this[r][0];null!=l&&(s[l]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);o&&s[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},s=[],r=0;r<n.length;r++){var l=n[r],c=o.base?l[0]+o.base:l[0],d=i[c]||0,A="".concat(c," ").concat(d);i[c]=d+1;var u=t(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=a(p,o);o.byIndex=r,e.splice(r,0,{identifier:A,updater:m,references:1})}s.push(A)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var r=t(i[s]);e[r].references--}for(var l=o(n,a),c=0;c<i.length;c++){var d=t(i[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=l}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.nc=void 0;var o={};(()=>{t.d(o,{nf:()=>P,j0:()=>M,el:()=>O,tJ:()=>D,GI:()=>U,kv:()=>Z,dT:()=>W,MT:()=>L,X1:()=>N,Ts:()=>Y,K9:()=>q,z2:()=>F,ot:()=>j});var n={};t.r(n),t.d(n,{C:()=>b});var e=t(379),a=t.n(e),i=t(795),s=t.n(i),r=t(569),l=t.n(r),c=t(565),d=t.n(c),A=t(216),u=t.n(A),p=t(589),m=t.n(p),f=t(602),g={};g.styleTagTransform=m(),g.setAttributes=d(),g.insert=l().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=u(),a()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const b=n=>{!function(){N.reset(),N.style.display="none",F.reset(),F.style.display="none",j.textContent="",D.style.display="flex",D.textContent="";const n=document.getElementById("taskDate");n.removeAttribute("min"),n.removeAttribute("max")}(),function(n){D.textContent="";let e=document.createElement("h1");e.textContent=n.name,e.classList.add("pageHeader"),D.append(e)}(n),function(n){L.textContent="",j.textContent="";for(let e=0;e<n.tasks.length;e++){let t=n.tasks[e],o=n.id,a=document.createElement("div");a.setAttribute("data-index",e),a.classList.add("mainTaskContainer");let i=document.createElement("div");i.classList.add("newTask");let s=document.createElement("div");s.classList.add("subTaskContainer");let r=document.createElement("input");r.type="checkbox";let l=document.createElement("div");l.classList.add("newTaskContent");let c=document.createElement("input");c.type="text",c.value=t.mainTaskData.mainTaskName;let d=document.createElement("input");d.type="date",d.value=t.mainTaskData.mainTaskDate,i.append(r),l.append(c),l.append(d),i.append(l),a.append(i),a.append(s),d.addEventListener("change",(function(){t.mainTaskData.mainTaskDate=d.value,localStorage.setItem("myProjects",JSON.stringify(Z))})),T(a,o),j.append(a);for(let n=0;n<t.subTasks.length;n++){let e=document.createElement("div");e.classList.add("subTask"),e.setAttribute("data-index",t.subTasks[n].id);let o=document.createElement("input");o.type="checkbox",e.append(o);let a=document.createElement("input");a.type="text",a.value=t.subTasks[n].name,e.append(a),s.append(e),t.subTasks[n].isChecked?(o.checked=!0,e.classList.add("subTaskDone")):(o.checked=!1,e.classList.remove("subTaskDone")),o.addEventListener("change",(function(){o.checked?(e.classList.add("subTaskDone"),t.subTasks[n].isChecked=!0,localStorage.setItem("myProjects",JSON.stringify(Z))):(e.classList.remove("subTaskDone"),t.subTasks[n].isChecked=!1,localStorage.setItem("myProjects",JSON.stringify(Z)))}))}r.addEventListener("change",(function(){r.checked&&(n.tasks.splice(e,1),b(n),localStorage.setItem("myProjects",JSON.stringify(Z)))}))}let e=document.createElement("button");e.textContent="new button!",e.onclick=function(){!function(n,e){window.addEventListener("resize",function(n){n.style.display="block",N.style.width=getComputedStyle(n).width,n.style.display="none"}(n)),function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left;N.style.top=t+"px",N.style.left=o+"px",N.style.display="block",N.style.width=getComputedStyle(n).width,n.style.display="none",F.reset(),F.style.display="none"}(n),N.onsubmit=function(t){console.log("submit new task clicked"),function(n){let e={id:n.tasks.length,mainTaskData:{mainTaskName:document.getElementById("taskName").value,mainTaskDate:document.getElementById("taskDate").value},subTasks:[]};n.tasks.push(e),localStorage.setItem("myProjects",JSON.stringify(Z)),b(n)}(e),n.style.display="block",N.reset(),N.style.display="none",t.preventDefault()},O.onclick=function(e){console.log("cancel task clicked"),n.style.display="block",N.reset(),N.style.display="none",e.preventDefault()}}(e,n)},e.classList.add("newTaskButton"),L.append(e)}(n)};function y(){let n=document.querySelectorAll(".sideBarButton");n.forEach((e=>{e.onclick=()=>{n=document.querySelectorAll(".sideBarButton"),n.forEach((n=>n.classList.remove("highlight-button"))),e.classList.add("highlight-button")}}))}function C(){Y.textContent="";for(let n=0;n<Z.length;n++){Z[n].id=n;let e=document.createElement("button");e.classList.add("newProject"),e.classList.add("sideBarButton");let t=document.createElement("button");e.textContent=Z[n].name,e.append(t),Y.append(e),e.addEventListener("click",(function(e){t.contains(e.target)||(b(Z[n]),x(n))})),t.addEventListener("click",(function(){Z.splice(n,1),console.log("deleting task "+n),C(),localStorage.setItem("myProjects",JSON.stringify(Z)),h()===n&&(S(),document.querySelector(".inbox").classList.add("highlight-button"))}))}y()}let k;const h=()=>k,x=n=>{k=n};function B(n){q.reset(),q.style.display="none",n.preventDefault()}const I=()=>{!function(){x(""),N.reset(),N.style.display="none",L.textContent="";const n=document.getElementById("taskDate");n.removeAttribute("min"),n.removeAttribute("max"),F.reset(),F.style.display="none",j.textContent="",D.style.display="flex",D.textContent="";let e=document.createElement("h1");e.textContent="This Week",e.classList.add("pageHeader"),D.append(e);let t=document.createElement("button");t.textContent="new button!",t.onclick=function(){E(t,"week")},t.classList.add("newTaskButton"),L.append(t)}();let n=new Date,e=n.getDay(),t=new Date(n);t.setDate(n.getDate()-e+1),t.setHours(0,0,0,0);let o=new Date(n);o.setDate(n.getDate()+(6-e)+1),o.setHours(23,59,59,999);const a=document.getElementById("taskDate"),i=`${t.getFullYear()}-${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")}`,s=`${o.getFullYear()}-${String(o.getMonth()+1).padStart(2,"0")}-${String(o.getDate()).padStart(2,"0")}`;a.min=i,a.max=s;for(let n=0;n<W.length;n++){let e=W[n],a=new Date(e.mainTaskData.mainTaskDate);a>=t&&a<=o&&w(n,"week")}};function T(e,t){e.addEventListener("contextmenu",(function(o){o.preventDefault(),U.style.display="block",U.style.left=`${o.pageX}px`,U.style.top=`${o.pageY}px`;const a=U.querySelector("#menu-item-1"),i=U.querySelector("#menu-item-2");a.onclick=function(){(function(n,e){n.append(F),F.style.display="block",N.reset(),N.style.display="none",document.querySelector(".newTaskButton").style.display="block",F.onsubmit=function(t){console.log("submit subtask clicked"),function(n,e){let t=n.getAttribute("data-index");if("inbox"===e||"today"===e||"week"===e){let n={id:W[t].subTasks.length,name:document.getElementById("subTaskName").value,isChecked:!1};W[t].subTasks.push(n),"inbox"==e?S():"today"==e?v():"week"==e&&I(),localStorage.setItem("myTasks",JSON.stringify(W))}else{console.log("project subtask???/");let n={id:Z[e].tasks[t].subTasks.length,name:document.getElementById("subTaskName").value,isChecked:!1};Z[e].tasks[t].subTasks.push(n),localStorage.setItem("myProjects",JSON.stringify(Z));let o=Z[e];b(o)}F.reset(),F.style.display="none"}(n,e),t.preventDefault()},M.onclick=function(n){console.log("cancel task clicked"),F.reset(),F.style.display="none",n.preventDefault()}})(e,t),U.style.display="none"},i.onclick=function(){if(W.includes(task))W.splice(task.id,1),localStorage.setItem("myTasks",JSON.stringify(W)),"inbox"==page?S():"today"==page?loadToday():"week"==page&&loadWeek();else{let e=task.id,t=Z.find((n=>n.tasks&&n.tasks.includes(task)));e>-1&&Z[t.id].tasks.splice(e,1),(0,n.showProjectTasks)(t)}U.style.display="none"},document.body.appendChild(U)})),document.body.onclick=n=>{console.log("clicked"),U.contains(n.target)||(console.log("clicked outside task"),U.style.display="none")}}function w(n,e){let t=W[n],o=document.createElement("div");o.setAttribute("data-index",n),o.classList.add("mainTaskContainer");let a=document.createElement("div");a.classList.add("newTask");let i=document.createElement("input");i.type="checkbox",a.append(i);let s=document.createElement("div");s.classList.add("newTaskContent");let r=document.createElement("input");r.type="text",r.value=t.mainTaskData.mainTaskName,s.append(r);let l=document.createElement("input");l.type="date",l.value=t.mainTaskData.mainTaskDate,s.append(l),l.addEventListener("change",(function(){t.mainTaskData.mainTaskDate=l.value,localStorage.setItem("myTasks",JSON.stringify(W))})),a.append(s);let c=document.createElement("div");c.classList.add("subTaskContainer"),o.append(a),o.append(c),T(o,e),j.append(o);for(let n=0;n<t.subTasks.length;n++){let e=document.createElement("div");e.classList.add("subTask"),e.setAttribute("data-index",t.subTasks[n].id);let o=document.createElement("input");o.type="checkbox",e.append(o);let a=document.createElement("input");a.type="text",a.value=t.subTasks[n].name,e.append(a),c.append(e),t.subTasks[n].isChecked?(o.checked=!0,e.classList.add("subTaskDone")):(o.checked=!1,e.classList.remove("subTaskDone")),o.addEventListener("change",(function(){o.checked?(e.classList.add("subTaskDone"),t.subTasks[n].isChecked=!0,localStorage.setItem("myTasks",JSON.stringify(W))):(e.classList.remove("subTaskDone"),t.subTasks[n].isChecked=!1,localStorage.setItem("myTasks",JSON.stringify(W)))}))}i.addEventListener("change",(function(){i.checked&&(console.log("checked task with id "+n+" and data-index "+o.getAttribute("data-index")),W.splice(n,1),"inbox"==e?S():"today"==e?v():"week"==e&&I(),localStorage.setItem("myTasks",JSON.stringify(W)))})),console.log(W[n])}const v=()=>{!function(){x(""),N.reset(),N.style.display="none",L.textContent="";const n=document.getElementById("taskDate");n.removeAttribute("min"),n.removeAttribute("max"),F.reset(),F.style.display="none",j.textContent="",D.style.display="flex",D.textContent="";let e=document.createElement("h1");e.textContent="Today",e.classList.add("pageHeader"),D.append(e);let t=document.createElement("button");t.textContent="new button!",t.onclick=function(){E(t,"today")},t.classList.add("newTaskButton"),L.append(t)}();let n=new Date;const e=document.getElementById("taskDate"),t=`${n.getFullYear()}-${String(n.getMonth()+1).padStart(2,"0")}-${String(n.getDate()).padStart(2,"0")}`;e.min=t,e.max=t;for(let e=0;e<W.length;e++){let t=W[e],o=new Date(t.mainTaskData.mainTaskDate);n.getFullYear()===o.getFullYear()&&n.getMonth()===o.getMonth()&&n.getDate()===o.getDate()&&w(e,"today")}};function E(n,e){!function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left;N.style.top=t+"px",N.style.left=o+"px",N.style.display="block",N.style.width=getComputedStyle(n).width,n.style.display="none",F.reset(),F.style.display="none"}(n),window.addEventListener("resize",function(n){n.style.display="block",N.style.width=getComputedStyle(n).width,n.style.display="none"}(n)),N.onsubmit=function(t){console.log("submit new task clicked"),function(n,e){let t={id:W.length,mainTaskData:{mainTaskName:document.getElementById("taskName").value,mainTaskDate:document.getElementById("taskDate").value},subTasks:[]};W.push(t),localStorage.setItem("myTasks",JSON.stringify(W)),document.getElementById("taskName").value="",N.style.display="none",n.style.display="block","inbox"==e?S():"today"==e?v():"week"==e&&I(),console.log(W)}(n,e),t.preventDefault()},O.onclick=function(e){console.log("cancel task clicked"),n.style.display="block",N.reset(),N.style.display="none",e.preventDefault()}}const S=()=>{!function(){x(""),N.reset(),N.style.display="none",F.reset(),F.style.display="none",D.style.display="flex",D.textContent="";const n=document.getElementById("taskDate");n.removeAttribute("min"),n.removeAttribute("max")}(),function(){let n=document.createElement("h1");n.textContent="Inbox",n.classList.add("pageHeader"),D.append(n)}(),function(){L.textContent="",j.textContent="";for(let n=0;n<W.length;n++)w(n,"inbox");let n=document.createElement("button");n.textContent="new button!",n.onclick=function(){E(n,"inbox")},n.classList.add("newTaskButton"),L.append(n)}()};document.querySelector("#content");const D=document.querySelector(".contentHeader"),L=(document.querySelector(".taskContainer"),document.querySelector(".newTaskButtonContainer")),j=document.querySelector(".taskList"),Y=document.getElementById("projectContainer"),N=document.querySelector(".newTaskForm"),O=(document.getElementById("submitNewTask"),document.getElementById("cancelTask")),F=document.querySelector(".subTaskForm"),M=(document.getElementById("submitSubTask"),document.getElementById("cancelSubTask")),q=document.querySelector(".projectForm"),P=(document.getElementById("addProject"),document.getElementById("cancelProject")),U=document.getElementById("custom-menu"),W=[],Z=[];!function(){try{const n=localStorage.getItem("myTasks"),e=JSON.parse(n);console.log(e),Array.isArray(e)?(W.splice(0),e.forEach((n=>{let e={id:n.id,mainTaskData:{mainTaskName:n.mainTaskData.mainTaskName,mainTaskDate:n.mainTaskData.mainTaskDate},taskDate:n.taskDate,subTasks:n.subTasks};W.push(e)}))):console.error("The stored data is not a valid array.")}catch(n){console.error("Error retrieving or parsing myTasks from localStorage:",n)}try{const n=localStorage.getItem("myProjects"),e=JSON.parse(n);console.log(e),Array.isArray(e)?(Z.splice(0),e.forEach((n=>{let e={id:n.id,name:n.name,tasks:n.tasks};Z.push(e)}))):console.error("The stored data is not a valid array.")}catch(n){console.error("Error retrieving or parsing myTasks from localStorage:",n)}S(),document.querySelector(".inbox").classList.add("highlight-button"),C()}(),document.querySelector(".inbox").addEventListener("click",S),document.querySelector(".today").addEventListener("click",v),document.querySelector(".week").addEventListener("click",I),document.querySelector(".newProject").onclick=function(){q.style.display="flex",q.onsubmit=function(n){!function(){let n={id:Z.length,name:document.getElementById("projectName").value,tasks:[]};Z.push(n),localStorage.setItem("myProjects",JSON.stringify(Z)),y(),C()}(),q.reset(),n.preventDefault()},P.onclick=B},y(),console.log("works lol")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,