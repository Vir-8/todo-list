(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(537),a=t.n(o),i=t(645),s=t.n(i)()(a());s.push([n.id,"* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 250px;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 250px);\n\n    color: white;\n    margin-left: 250px;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 35px;\n    width: 100%;\n    background-color: #d4d4d8;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n}\n\n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    background-color: red;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.subTaskContainer .subTaskDone {\n    background-color: aquamarine;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n#projectContainer button {\n    background-color: #d4d4d8;\n}\n\n#projectContainer .highlight-button {\n    background-color: #71717a;\n}\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;;IAEX,yBAAyB;;IAEzB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,kBAAkB;IAClB,qGAAqG;AACzG;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,eAAe;IACf,0BAA0B;IAC1B,YAAY;IACZ,aAAa;IACb,SAAS;IACT,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,2BAA2B;IAC3B,YAAY;IACZ,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,gBAAgB;IAChB,0BAA0B;IAC1B,0BAA0B;;IAE1B,YAAY;IACZ,kBAAkB;IAClB,SAAS;IACT,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,sBAAsB;IACtB,qGAAqG;IACrG,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI;AACJ;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,WAAW;IACX,yBAAyB;IACzB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,WAAW;IACX,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,2BAA2B;IAC3B,YAAY;AAChB;;AAEA;IACI,4BAA4B;AAChC;;;;;;AAMA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,iBAAiB;IACjB,wCAAwC;IACxC,4BAA4B;IAC5B,6BAA6B;AACjC;;;AAGA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;;;;AAKA;IACI,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 250px;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 250px);\n\n    color: white;\n    margin-left: 250px;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 35px;\n    width: 100%;\n    background-color: #d4d4d8;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n}\n\n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    background-color: red;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.subTaskContainer .subTaskDone {\n    background-color: aquamarine;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n#projectContainer button {\n    background-color: #d4d4d8;\n}\n\n#projectContainer .highlight-button {\n    background-color: #71717a;\n}\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}"],sourceRoot:""}]);const l=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var l=0;l<this.length;l++){var r=this[l][0];null!=r&&(s[r]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&s[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},s=[],l=0;l<n.length;l++){var r=n[l],c=o.base?r[0]+o.base:r[0],A=i[c]||0,d="".concat(c," ").concat(A);i[c]=A+1;var u=t(d),p={css:r[1],media:r[2],sourceMap:r[3],supports:r[4],layer:r[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=a(p,o);o.byIndex=l,e.splice(l,0,{identifier:d,updater:f,references:1})}s.push(d)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var l=t(i[s]);e[l].references--}for(var r=o(n,a),c=0;c<i.length;c++){var A=t(i[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=r}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{nf:()=>S,j0:()=>T,el:()=>w,tJ:()=>x,GI:()=>L,kv:()=>Y,dT:()=>j,X1:()=>v,Ts:()=>I,K9:()=>D,z2:()=>E,ot:()=>h});var n=t(379),e=t.n(n),a=t(795),i=t.n(a),s=t(569),l=t.n(s),r=t(565),c=t.n(r),A=t(216),d=t.n(A),u=t(589),p=t.n(u),f=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=l().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=d(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;function b(n){h.textContent="";for(let e=0;e<n.tasks.length;e++){let t=n.tasks[e],o=t.mainTaskDiv,a=t.newTaskDiv,i=t.subTaskDiv;o.append(a),o.append(i),h.append(o)}let e=document.createElement("button");e.textContent="new button!",e.onclick=function(){!function(n,e){var t=n.getBoundingClientRect(),o=t.top,a=t.left;v.style.top=o+"px",v.style.left=a+"px",v.style.display="block",v.style.width=getComputedStyle(n).width,n.style.display="none",window.addEventListener("resize",(function(){n.style.display="block",v.style.width=getComputedStyle(n).width,n.style.display="none"})),v.onsubmit=function(t){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let o=document.createElement("div");o.classList.add("subTaskContainer");let a=document.createElement("input");a.type="checkbox",t.append(a);let i=document.createElement("div");i.classList.add("newTaskContent");let s=document.createElement("input");s.type="text",s.value=document.getElementById("taskName").value,i.append(s);let l=document.createElement("input");l.type="date",l.value=document.getElementById("taskDate").value,i.append(l),t.append(i);let r={id:n.tasks.length,taskDate:C(),subTasks:[],mainTaskDiv:e,newTaskDiv:t,subTaskDiv:o};l.addEventListener("change",(function(){let n=new Date(l.value);r.taskDate=n})),a.addEventListener("change",(function(){if(a.checked){let e=n.id,t=n.tasks.indexOf(r);t>-1&&Y[e].tasks.splice(t,1),b(n)}})),g(r),n.tasks.push(r),b(n)}(e),n.style.display="block",v.reset(),v.style.display="none",t.preventDefault()},w.onclick=function(e){console.log("cancel task clicked"),n.style.visibility="visible",v.reset(),v.style.display="none",e.preventDefault()}}(e,n)},e.classList.add("newTaskButton"),h.append(e)}function g(n){n.newTaskDiv.addEventListener("contextmenu",(function(e){e.preventDefault(),L.style.display="block",L.style.left=`${e.pageX}px`,L.style.top=`${e.pageY}px`;const t=L.querySelector("#menu-item-1"),o=L.querySelector("#menu-item-2");t.onclick=function(){(function(n){n.subTaskDiv.insertAdjacentElement("afterend",E),E.style.display="block",E.onsubmit=function(e){console.log("submit subtask clicked"),function(n){let e=document.createElement("div");e.classList.add("subTask");let t=document.createElement("input");t.type="checkbox",e.append(t);let o=document.createElement("input");o.type="text",o.value=document.getElementById("subTaskName").value,e.append(o),e.setAttribute("data-index",n.subTasks.length),n.subTasks.push(e),n.subTaskDiv.append(e),t.addEventListener("change",(function(){t.checked?(e.classList.add("subTaskDone"),console.log(j)):e.classList.remove("subTaskDone")})),E.reset(),E.style.display="none",console.log(n.subTasks)}(n),e.preventDefault()},T.onclick=function(n){console.log("cancel task clicked"),n.preventDefault()}})(n),L.style.display="none"},o.onclick=function(){if(j.includes(n))j.splice(n.id,1),B();else{let e=n.id,t=Y.find((e=>e.tasks&&e.tasks.includes(n)));e>-1&&Y[t.id].tasks.splice(e,1),b(t)}L.style.display="none"},document.body.appendChild(L)}))}function C(){let n=document.getElementById("taskDate").value;return new Date(n)}const B=()=>{x.textContent="",function(){let n=document.createElement("h1");n.textContent="Inbox",n.classList.add("pageHeader"),x.append(n)}(),function(){h.textContent="";for(let n=0;n<j.length;n++){let e=j[n].mainTaskDiv,t=j[n].newTaskDiv,o=j[n].subTaskDiv;e.append(t),e.append(o),h.append(e),console.log(j[n])}let n=document.createElement("button");n.textContent="new button!",n.onclick=function(){!function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left;v.style.top=t+"px",v.style.left=o+"px",v.style.display="block",v.style.width=getComputedStyle(n).width,n.style.display="none",window.addEventListener("resize",(function(){n.style.display="block",v.style.width=getComputedStyle(n).width,n.style.display="none"})),v.onsubmit=function(e){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let o=document.createElement("input");o.type="checkbox",t.append(o);let a=document.createElement("div");a.classList.add("newTaskContent");let i=document.createElement("input");i.type="text",i.value=document.getElementById("taskName").value,a.append(i);let s=document.createElement("input");s.type="date",s.value=document.getElementById("taskDate").value,a.append(s),t.append(a),s.addEventListener("change",(function(){let n=new Date(s.value);r.taskDate=n}));let l=document.createElement("div");l.classList.add("subTaskContainer");let r={id:j.length,mainTaskDiv:e,newTaskDiv:t,subTaskDiv:l,taskDate:C(),subTasks:[]};g(r),j.push(r),o.addEventListener("change",(function(){o.checked&&(j.splice(r.id,1),B(),console.log(j))})),document.getElementById("taskName").value="",v.style.display="none",n.style.display="block",B(),console.log(j)}(n),e.preventDefault()},w.onclick=function(e){console.log("cancel task clicked"),e.preventDefault(),function(n){n.style.display="block",v.style.display="none"}(n)}}(n)},n.classList.add("newTaskButton"),h.append(n)}()};function y(){let n=document.querySelectorAll(".sideBarButton");n.forEach((e=>{e.onclick=()=>{n=document.querySelectorAll(".sideBarButton"),n.forEach((n=>n.classList.remove("highlight-button"))),e.classList.add("highlight-button")}}))}function k(n){D.reset(),D.style.display="none",n.preventDefault()}document.querySelector("#content");const x=document.querySelector(".contentHeader"),h=(document.querySelector(".taskContainer"),document.querySelector(".taskList")),I=document.getElementById("projectContainer"),v=document.querySelector(".newTaskForm"),w=(document.getElementById("submitNewTask"),document.getElementById("cancelTask")),E=document.querySelector(".subTaskForm"),T=(document.getElementById("submitSubTask"),document.getElementById("cancelSubTask")),D=document.querySelector(".projectForm"),S=(document.getElementById("addProject"),document.getElementById("cancelProject")),L=document.getElementById("custom-menu"),j=[],Y=[];document.querySelector(".inbox").addEventListener("click",B),document.querySelector(".today").addEventListener("click",(()=>{h.textContent="",x.textContent="";let n=document.createElement("h1");n.textContent="Today",n.classList.add("pageHeader"),x.append(n);let e=new Date;console.log("todayDate is "+e);for(let n=0;n<j.length;n++){let t=j[n],o=t.taskDate;if(console.log("this task data-date is "+o),e.getFullYear()===o.getFullYear()&&e.getMonth()===o.getMonth()&&e.getDate()===o.getDate()){let n=t.mainTaskDiv,e=t.newTaskDiv,o=t.subTaskDiv;n.append(e),n.append(o),h.append(n)}}})),document.querySelector(".week").addEventListener("click",(()=>{h.textContent="",x.textContent="";let n=document.createElement("h1");n.textContent="This Week",n.classList.add("pageHeader"),x.append(n);let e=new Date,t=e.getDay(),o=new Date(e);o.setDate(e.getDate()-t+1),o.setHours(0,0,0,0);let a=new Date(e);a.setDate(e.getDate()+(6-t)+1),a.setHours(23,59,59,999),console.log("todayDate is "+e),console.log("week start is "+o+" and week end is "+a);for(let n=0;n<j.length;n++){let e=j[n],t=e.taskDate;if(console.log("this task data-date is "+t),t>=o&&t<=a){let n=e.mainTaskDiv,t=e.newTaskDiv,o=e.subTaskDiv;n.append(t),n.append(o),h.append(n)}}})),document.querySelector(".newProject").onclick=function(){D.style.display="flex",D.onsubmit=function(n){!function(){let n=document.createElement("button");n.classList.add("newProject"),n.classList.add("sideBarButton");let e=document.getElementById("projectName").value;n.textContent=e;let t={id:Y.length,name:e,tasks:[]};I.append(n),Y.push(t),y(),n.addEventListener("click",(function(){(n=>{h.textContent="",x.textContent="",function(n){x.textContent="";let e=document.createElement("h1");e.textContent=n.name,e.classList.add("pageHeader"),x.append(e)}(n),b(n)})(t)}))}(),D.reset(),n.preventDefault()},S.onclick=k},y(),console.log("works lol")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoid0ZBR0lBLEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUksdXZJQWtRckMsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNkJBQTZCLE1BQVEsR0FBRyxTQUFXLHU1REFBdTVELGVBQWlCLENBQUMsd3ZJQUF3dkksV0FBYSxNQUVod00sUyxVQ25RQUQsRUFBT0UsUUFBVSxTQUFVQyxHQUN6QixJQUFJQyxFQUFPLEdBNEVYLE9BekVBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0MsS0FBS0MsS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVLEdBQ1ZDLE9BQStCLElBQVpGLEVBQUssR0FvQjVCLE9BbkJJQSxFQUFLLEtBQ1BDLEdBQVcsY0FBY0UsT0FBT0gsRUFBSyxHQUFJLFFBRXZDQSxFQUFLLEtBQ1BDLEdBQVcsVUFBVUUsT0FBT0gsRUFBSyxHQUFJLE9BRW5DRSxJQUNGRCxHQUFXLFNBQVNFLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE9BRTVFQyxHQUFXTixFQUF1QkssR0FDOUJFLElBQ0ZELEdBQVcsS0FFVEQsRUFBSyxLQUNQQyxHQUFXLEtBRVRELEVBQUssS0FDUEMsR0FBVyxLQUVOQSxDQUNULElBQUdJLEtBQUssR0FDVixFQUdBVCxFQUFLVSxFQUFJLFNBQVdDLEVBQVNDLEVBQU9DLEVBQVFDLEVBQVVDLEdBQzdCLGlCQUFaSixJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxPQUFTSyxLQUU3QixJQUFJQyxFQUF5QixDQUFDLEVBQzlCLEdBQUlKLEVBQ0YsSUFBSyxJQUFJSyxFQUFJLEVBQUdBLEVBQUloQixLQUFLTSxPQUFRVSxJQUFLLENBQ3BDLElBQUlyQixFQUFLSyxLQUFLZ0IsR0FBRyxHQUNQLE1BQU5yQixJQUNGb0IsRUFBdUJwQixJQUFNLEVBRWpDLENBRUYsSUFBSyxJQUFJc0IsRUFBSyxFQUFHQSxFQUFLUixFQUFRSCxPQUFRVyxJQUFNLENBQzFDLElBQUlmLEVBQU8sR0FBR0csT0FBT0ksRUFBUVEsSUFDekJOLEdBQVVJLEVBQXVCYixFQUFLLFdBR3JCLElBQVZXLFNBQ2MsSUFBWlgsRUFBSyxLQUdkQSxFQUFLLEdBQUssU0FBU0csT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLE1BRi9GQSxFQUFLLEdBQUtXLEdBTVZILElBQ0dSLEVBQUssSUFHUkEsRUFBSyxHQUFLLFVBQVVHLE9BQU9ILEVBQUssR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksS0FDMURBLEVBQUssR0FBS1EsR0FIVlIsRUFBSyxHQUFLUSxHQU1WRSxJQUNHVixFQUFLLElBR1JBLEVBQUssR0FBSyxjQUFjRyxPQUFPSCxFQUFLLEdBQUksT0FBT0csT0FBT0gsRUFBSyxHQUFJLEtBQy9EQSxFQUFLLEdBQUtVLEdBSFZWLEVBQUssR0FBSyxHQUFHRyxPQUFPTyxJQU14QmQsRUFBS0wsS0FBS1MsR0FDWixDQUNGLEVBQ09KLENBQ1QsQyxVQ2xGQUosRUFBT0UsUUFBVSxTQUFVTSxHQUN6QixJQUFJQyxFQUFVRCxFQUFLLEdBQ2ZnQixFQUFhaEIsRUFBSyxHQUN0QixJQUFLZ0IsRUFDSCxPQUFPZixFQUVULEdBQW9CLG1CQUFUZ0IsS0FBcUIsQ0FDOUIsSUFBSUMsRUFBU0QsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVTixNQUN6RE8sRUFBTywrREFBK0RwQixPQUFPZSxHQUM3RU0sRUFBZ0IsT0FBT3JCLE9BQU9vQixFQUFNLE9BQ3hDLE1BQU8sQ0FBQ3RCLEdBQVNFLE9BQU8sQ0FBQ3FCLElBQWdCbkIsS0FBSyxLQUNoRCxDQUNBLE1BQU8sQ0FBQ0osR0FBU0ksS0FBSyxLQUN4QixDLFVDYkEsSUFBSW9CLEVBQWMsR0FDbEIsU0FBU0MsRUFBcUJDLEdBRTVCLElBREEsSUFBSUMsR0FBVSxFQUNMdEIsRUFBSSxFQUFHQSxFQUFJbUIsRUFBWXJCLE9BQVFFLElBQ3RDLEdBQUltQixFQUFZbkIsR0FBR3FCLGFBQWVBLEVBQVksQ0FDNUNDLEVBQVN0QixFQUNULEtBQ0YsQ0FFRixPQUFPc0IsQ0FDVCxDQUNBLFNBQVNDLEVBQWFqQyxFQUFNa0MsR0FHMUIsSUFGQSxJQUFJQyxFQUFhLENBQUMsRUFDZEMsRUFBYyxHQUNUMUIsRUFBSSxFQUFHQSxFQUFJVixFQUFLUSxPQUFRRSxJQUFLLENBQ3BDLElBQUlOLEVBQU9KLEVBQUtVLEdBQ1piLEVBQUtxQyxFQUFRRyxLQUFPakMsRUFBSyxHQUFLOEIsRUFBUUcsS0FBT2pDLEVBQUssR0FDbERrQyxFQUFRSCxFQUFXdEMsSUFBTyxFQUMxQmtDLEVBQWEsR0FBR3hCLE9BQU9WLEVBQUksS0FBS1UsT0FBTytCLEdBQzNDSCxFQUFXdEMsR0FBTXlDLEVBQVEsRUFDekIsSUFBSUMsRUFBb0JULEVBQXFCQyxHQUN6Q1MsRUFBTSxDQUNSQyxJQUFLckMsRUFBSyxHQUNWUSxNQUFPUixFQUFLLEdBQ1pzQyxVQUFXdEMsRUFBSyxHQUNoQlUsU0FBVVYsRUFBSyxHQUNmVyxNQUFPWCxFQUFLLElBRWQsSUFBMkIsSUFBdkJtQyxFQUNGVixFQUFZVSxHQUFtQkksYUFDL0JkLEVBQVlVLEdBQW1CSyxRQUFRSixPQUNsQyxDQUNMLElBQUlJLEVBQVVDLEVBQWdCTCxFQUFLTixHQUNuQ0EsRUFBUVksUUFBVXBDLEVBQ2xCbUIsRUFBWWtCLE9BQU9yQyxFQUFHLEVBQUcsQ0FDdkJxQixXQUFZQSxFQUNaYSxRQUFTQSxFQUNURCxXQUFZLEdBRWhCLENBQ0FQLEVBQVl6QyxLQUFLb0MsRUFDbkIsQ0FDQSxPQUFPSyxDQUNULENBQ0EsU0FBU1MsRUFBZ0JMLEVBQUtOLEdBQzVCLElBQUljLEVBQU1kLEVBQVFlLE9BQU9mLEdBWXpCLE9BWEFjLEVBQUlFLE9BQU9WLEdBQ0csU0FBaUJXLEdBQzdCLEdBQUlBLEVBQVEsQ0FDVixHQUFJQSxFQUFPVixNQUFRRCxFQUFJQyxLQUFPVSxFQUFPdkMsUUFBVTRCLEVBQUk1QixPQUFTdUMsRUFBT1QsWUFBY0YsRUFBSUUsV0FBYVMsRUFBT3JDLFdBQWEwQixFQUFJMUIsVUFBWXFDLEVBQU9wQyxRQUFVeUIsRUFBSXpCLE1BQ3pKLE9BRUZpQyxFQUFJRSxPQUFPVixFQUFNVyxFQUNuQixNQUNFSCxFQUFJSSxRQUVSLENBRUYsQ0FDQXhELEVBQU9FLFFBQVUsU0FBVUUsRUFBTWtDLEdBRy9CLElBQUltQixFQUFrQnBCLEVBRHRCakMsRUFBT0EsR0FBUSxHQURma0MsRUFBVUEsR0FBVyxDQUFDLEdBR3RCLE9BQU8sU0FBZ0JvQixHQUNyQkEsRUFBVUEsR0FBVyxHQUNyQixJQUFLLElBQUk1QyxFQUFJLEVBQUdBLEVBQUkyQyxFQUFnQjdDLE9BQVFFLElBQUssQ0FDL0MsSUFDSTZDLEVBQVF6QixFQURLdUIsRUFBZ0IzQyxJQUVqQ21CLEVBQVkwQixHQUFPWixZQUNyQixDQUVBLElBREEsSUFBSWEsRUFBcUJ2QixFQUFhcUIsRUFBU3BCLEdBQ3RDdUIsRUFBSyxFQUFHQSxFQUFLSixFQUFnQjdDLE9BQVFpRCxJQUFNLENBQ2xELElBQ0lDLEVBQVM1QixFQURLdUIsRUFBZ0JJLElBRUssSUFBbkM1QixFQUFZNkIsR0FBUWYsYUFDdEJkLEVBQVk2QixHQUFRZCxVQUNwQmYsRUFBWWtCLE9BQU9XLEVBQVEsR0FFL0IsQ0FDQUwsRUFBa0JHLENBQ3BCLENBQ0YsQyxVQ2pGQSxJQUFJRyxFQUFPLENBQUMsRUErQlovRCxFQUFPRSxRQVBQLFNBQTBCOEQsRUFBUUMsR0FDaEMsSUFBSUMsRUF0Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCSCxFQUFLRyxHQUF5QixDQUN2QyxJQUFJQyxFQUFjQyxTQUFTQyxjQUFjSCxHQUd6QyxHQUFJSSxPQUFPQyxtQkFBcUJKLGFBQXVCRyxPQUFPQyxrQkFDNUQsSUFHRUosRUFBY0EsRUFBWUssZ0JBQWdCQyxJQUM1QyxDQUFFLE1BQU9DLEdBRVBQLEVBQWMsSUFDaEIsQ0FFRkosRUFBS0csR0FBVUMsQ0FDakIsQ0FDQSxPQUFPSixFQUFLRyxFQUNkLENBSWVTLENBQVVYLEdBQ3ZCLElBQUtFLEVBQ0gsTUFBTSxJQUFJVSxNQUFNLDJHQUVsQlYsRUFBT1csWUFBWVosRUFDckIsQyxVQ3ZCQWpFLEVBQU9FLFFBTlAsU0FBNEJvQyxHQUMxQixJQUFJd0MsRUFBVVYsU0FBU1csY0FBYyxTQUdyQyxPQUZBekMsRUFBUTBDLGNBQWNGLEVBQVN4QyxFQUFRMkMsWUFDdkMzQyxFQUFRMEIsT0FBT2MsRUFBU3hDLEVBQVFBLFNBQ3pCd0MsQ0FDVCxDLGdCQ0NBOUUsRUFBT0UsUUFOUCxTQUF3Q2dGLEdBQ3RDLElBQUlDLEVBQW1ELEtBQ25EQSxHQUNGRCxFQUFhRSxhQUFhLFFBQVNELEVBRXZDLEMsVUNvREFuRixFQUFPRSxRQWpCUCxTQUFnQm9DLEdBQ2QsR0FBd0Isb0JBQWI4QixTQUNULE1BQU8sQ0FDTGQsT0FBUSxXQUFtQixFQUMzQkUsT0FBUSxXQUFtQixHQUcvQixJQUFJMEIsRUFBZTVDLEVBQVErQyxtQkFBbUIvQyxHQUM5QyxNQUFPLENBQ0xnQixPQUFRLFNBQWdCVixJQWpENUIsU0FBZXNDLEVBQWM1QyxFQUFTTSxHQUNwQyxJQUFJQyxFQUFNLEdBQ05ELEVBQUkxQixXQUNOMkIsR0FBTyxjQUFjbEMsT0FBT2lDLEVBQUkxQixTQUFVLFFBRXhDMEIsRUFBSTVCLFFBQ042QixHQUFPLFVBQVVsQyxPQUFPaUMsRUFBSTVCLE1BQU8sT0FFckMsSUFBSU4sT0FBaUMsSUFBZGtDLEVBQUl6QixNQUN2QlQsSUFDRm1DLEdBQU8sU0FBU2xDLE9BQU9pQyxFQUFJekIsTUFBTVAsT0FBUyxFQUFJLElBQUlELE9BQU9pQyxFQUFJekIsT0FBUyxHQUFJLE9BRTVFMEIsR0FBT0QsRUFBSUMsSUFDUG5DLElBQ0ZtQyxHQUFPLEtBRUxELEVBQUk1QixRQUNONkIsR0FBTyxLQUVMRCxFQUFJMUIsV0FDTjJCLEdBQU8sS0FFVCxJQUFJQyxFQUFZRixFQUFJRSxVQUNoQkEsR0FBNkIsb0JBQVRyQixPQUN0Qm9CLEdBQU8sdURBQXVEbEMsT0FBT2MsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVZ0IsTUFBZSxRQUt0SVIsRUFBUWdELGtCQUFrQnpDLEVBQUtxQyxFQUFjNUMsRUFBUUEsUUFDdkQsQ0FvQk1pRCxDQUFNTCxFQUFjNUMsRUFBU00sRUFDL0IsRUFDQVksT0FBUSxZQXJCWixTQUE0QjBCLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhTSxXQUNmLE9BQU8sRUFFVE4sRUFBYU0sV0FBV0MsWUFBWVAsRUFDdEMsQ0FnQk1RLENBQW1CUixFQUNyQixFQUVKLEMsVUM5Q0FsRixFQUFPRSxRQVZQLFNBQTJCMkMsRUFBS3FDLEdBQzlCLEdBQUlBLEVBQWFTLFdBQ2ZULEVBQWFTLFdBQVdDLFFBQVUvQyxNQUM3QixDQUNMLEtBQU9xQyxFQUFhVyxZQUNsQlgsRUFBYU8sWUFBWVAsRUFBYVcsWUFFeENYLEVBQWFMLFlBQVlULFNBQVMwQixlQUFlakQsR0FDbkQsQ0FDRixDLEdDWElrRCxFQUEyQixDQUFDLEVBR2hDLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUI3RSxJQUFqQjhFLEVBQ0gsT0FBT0EsRUFBYWhHLFFBR3JCLElBQUlGLEVBQVMrRixFQUF5QkUsR0FBWSxDQUNqRGhHLEdBQUlnRyxFQUVKL0YsUUFBUyxDQUFDLEdBT1gsT0FIQWlHLEVBQW9CRixHQUFVakcsRUFBUUEsRUFBT0UsUUFBUzhGLEdBRy9DaEcsRUFBT0UsT0FDZixDQ3JCQThGLEVBQW9CSSxFQUFLcEcsSUFDeEIsSUFBSXFHLEVBQVNyRyxHQUFVQSxFQUFPc0csV0FDN0IsSUFBT3RHLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBZ0csRUFBb0JPLEVBQUVGLEVBQVEsQ0FBRUcsRUFBR0gsSUFDNUJBLENBQU0sRUNMZEwsRUFBb0JPLEVBQUksQ0FBQ3JHLEVBQVN1RyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRXpHLEVBQVN3RyxJQUM1RUUsT0FBT0MsZUFBZTNHLEVBQVN3RyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsSUFFMUUsRUNORFYsRUFBb0JXLEVBQUksQ0FBQy9ELEVBQUtvRSxJQUFVSixPQUFPSyxVQUFVQyxlQUFlQyxLQUFLdkUsRUFBS29FLEdDQWxGaEIsRUFBb0JvQixRQUFLaEcsRSw2UENXckJrQixFQUFVLENBQUMsRUFFZkEsRUFBUWdELGtCQUFvQixJQUM1QmhELEVBQVEwQyxjQUFnQixJQUVsQjFDLEVBQVEwQixPQUFTLFNBQWMsS0FBTSxRQUUzQzFCLEVBQVFlLE9BQVMsSUFDakJmLEVBQVErQyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTL0MsR0FLSixLQUFXLElBQVErRSxRQUFTLElBQVFBLE9DSG5ELFNBQVNDLEVBQWlCQyxHQUM3QkMsRUFBU0MsWUFBYyxHQUN2QixJQUFLLElBQUkzRyxFQUFJLEVBQUdBLEVBQUl5RyxFQUFXRyxNQUFNOUcsT0FBUUUsSUFDN0MsQ0FDSSxJQUFJNkcsRUFBZUosRUFBV0csTUFBTTVHLEdBRWhDOEcsRUFBY0QsRUFBYUMsWUFDM0JDLEVBQWFGLEVBQWFFLFdBQzFCQyxFQUFhSCxFQUFhRyxXQUU5QkYsRUFBWUcsT0FBT0YsR0FDbkJELEVBQVlHLE9BQU9ELEdBQ25CTixFQUFTTyxPQUFPSCxFQUNwQixDQUdBLElBQUlJLEVBQXVCNUQsU0FBU1csY0FBYyxVQUNsRGlELEVBQXFCUCxZQUFjLGNBRW5DTyxFQUFxQkMsUUFBVSxZQ3JDNUIsU0FBd0JELEVBQXNCVCxHQUVqRCxJQUFJVyxFQUFhRixFQUFxQkcsd0JBRWxDQyxFQUFZRixFQUFXRyxJQUN2QkMsRUFBYUosRUFBV0ssS0FDNUJDLEVBQVl2RSxNQUFNb0UsSUFBTUQsRUFBWSxLQUNwQ0ksRUFBWXZFLE1BQU1zRSxLQUFPRCxFQUFhLEtBRXRDRSxFQUFZdkUsTUFBTXdFLFFBQVUsUUFDNUJELEVBQVl2RSxNQUFNeUUsTUFBUUMsaUJBQWlCWCxHQUFzQlUsTUFDakVWLEVBQXFCL0QsTUFBTXdFLFFBQVUsT0FFckNuRSxPQUFPc0UsaUJBQWlCLFVBRXhCLFdBQ0laLEVBQXFCL0QsTUFBTXdFLFFBQVUsUUFDckNELEVBQVl2RSxNQUFNeUUsTUFBUUMsaUJBQWlCWCxHQUFzQlUsTUFDakVWLEVBQXFCL0QsTUFBTXdFLFFBQVUsTUFDekMsSUFFQUQsRUFBWUssU0FBVyxTQUFTbkUsR0FDNUJvRSxRQUFRQyxJQUFJLDJCQW1CcEIsU0FBMkJ4QixHQUN2QixJQUFJeUIsRUFBb0I1RSxTQUFTVyxjQUFjLE9BQy9DaUUsRUFBa0JDLFVBQVVDLElBQUkscUJBRWhDLElBQUlDLEVBQW1CL0UsU0FBU1csY0FBYyxPQUM5Q29FLEVBQWlCRixVQUFVQyxJQUFJLFdBRS9CLElBQUlFLEVBQW1CaEYsU0FBU1csY0FBYyxPQUM5Q3FFLEVBQWlCSCxVQUFVQyxJQUFJLG9CQUUvQixJQUFJRyxFQUFRakYsU0FBU1csY0FBYyxTQUNuQ3NFLEVBQU1DLEtBQU8sV0FDYkgsRUFBaUJwQixPQUFPc0IsR0FFeEIsSUFBSUUsRUFBaUJuRixTQUFTVyxjQUFjLE9BQzVDd0UsRUFBZU4sVUFBVUMsSUFBSSxrQkFFN0IsSUFBSU0sRUFBV3BGLFNBQVNXLGNBQWMsU0FDdEN5RSxFQUFTRixLQUFPLE9BQ2hCRSxFQUFTQyxNQUFRckYsU0FBU3NGLGVBQWUsWUFBWUQsTUFDckRGLEVBQWV4QixPQUFPeUIsR0FFdEIsSUFBSUcsRUFBV3ZGLFNBQVNXLGNBQWMsU0FDdEM0RSxFQUFTTCxLQUFPLE9BQ2hCSyxFQUFTRixNQUFRckYsU0FBU3NGLGVBQWUsWUFBWUQsTUFDckRGLEVBQWV4QixPQUFPNEIsR0FFdEJSLEVBQWlCcEIsT0FBT3dCLEdBRXhCLElBQUlLLEVBQWMsQ0FDZDNKLEdBQUlzSCxFQUFXRyxNQUFNOUcsT0FDckIrSSxTQUFVRSxJQUNWQyxTQUFVLEdBQ1ZsQyxZQUFhb0IsRUFDYm5CLFdBQVlzQixFQUNackIsV0FBWXNCLEdBR2hCTyxFQUFTZixpQkFBaUIsVUFBVSxXQUNoQyxJQUFJbUIsRUFBYyxJQUFJQyxLQUFLTCxFQUFTRixPQUVwQ0csRUFBWUQsU0FBV0ksQ0FDM0IsSUFHQVYsRUFBTVQsaUJBQWlCLFVBQVUsV0FDN0IsR0FBSVMsRUFBTVksUUFBUyxDQUVqQixJQUFJQyxFQUFZM0MsRUFBV3RILEdBQ3ZCa0ssRUFBWTVDLEVBQVdHLE1BQU0wQyxRQUFRUixHQUVyQ08sR0FBYSxHQUNmRSxFQUFXSCxHQUFXeEMsTUFBTXZFLE9BQU9nSCxFQUFXLEdBR2hEN0MsRUFBaUJDLEVBQ25CLENBQ0osSUFFQStDLEVBQVlWLEdBQ1pyQyxFQUFXRyxNQUFNM0gsS0FBSzZKLEdBRXRCdEMsRUFBaUJDLEVBQ3JCLENBakZRZ0QsQ0FBa0JoRCxHQUVsQlMsRUFBcUIvRCxNQUFNd0UsUUFBVSxRQUNyQ0QsRUFBWWdDLFFBQ1poQyxFQUFZdkUsTUFBTXdFLFFBQVUsT0FDNUIvRCxFQUFFK0YsZ0JBQ04sRUFFQUMsRUFBV3pDLFFBQVUsU0FBU3ZELEdBQzFCb0UsUUFBUUMsSUFBSSx1QkFFWmYsRUFBcUIvRCxNQUFNMEcsV0FBYSxVQUN4Q25DLEVBQVlnQyxRQUNaaEMsRUFBWXZFLE1BQU13RSxRQUFVLE9BQzVCL0QsRUFBRStGLGdCQUNOLENBQ0osQ0REUUcsQ0FBZTVDLEVBQXNCVCxFQUN6QyxFQUVBUyxFQUFxQmlCLFVBQVVDLElBQUksaUJBQ25DMUIsRUFBU08sT0FBT0MsRUFDcEIsQ0UzQ08sU0FBU3NDLEVBQVlPLEdBQzFCQSxFQUFLaEQsV0FBV2UsaUJBQWlCLGVBQWUsU0FBU2xFLEdBQ3JEQSxFQUFFK0YsaUJBR0ZLLEVBQUs3RyxNQUFNd0UsUUFBVSxRQUNyQnFDLEVBQUs3RyxNQUFNc0UsS0FBTyxHQUFHN0QsRUFBRXFHLFVBQ3ZCRCxFQUFLN0csTUFBTW9FLElBQU0sR0FBRzNELEVBQUVzRyxVQUV0QixNQUFNQyxFQUFZSCxFQUFLekcsY0FBYyxnQkFDL0I2RyxFQUFZSixFQUFLekcsY0FBYyxnQkFFckM0RyxFQUFVaEQsUUFBVSxZQ2JuQixTQUFvQjRDLEdBRXZCQSxFQUFLL0MsV0FBV3FELHNCQUFzQixXQUFZQyxHQUVsREEsRUFBWW5ILE1BQU13RSxRQUFVLFFBRTVCMkMsRUFBWXZDLFNBQVcsU0FBU25FLEdBQzVCb0UsUUFBUUMsSUFBSSwwQkFXcEIsU0FBdUI4QixHQUVuQixJQUFJUSxFQUFhakgsU0FBU1csY0FBYyxPQUN4Q3NHLEVBQVdwQyxVQUFVQyxJQUFJLFdBRXpCLElBQUlHLEVBQVFqRixTQUFTVyxjQUFjLFNBQ25Dc0UsRUFBTUMsS0FBTyxXQUNiK0IsRUFBV3RELE9BQU9zQixHQUVsQixJQUFJRyxFQUFXcEYsU0FBU1csY0FBYyxTQUN0Q3lFLEVBQVNGLEtBQU8sT0FDaEJFLEVBQVNDLE1BQVFyRixTQUFTc0YsZUFBZSxlQUFlRCxNQUN4RDRCLEVBQVd0RCxPQUFPeUIsR0FFbEI2QixFQUFXakcsYUFBYSxhQUFjeUYsRUFBS2YsU0FBU2xKLFFBRXBEaUssRUFBS2YsU0FBUy9KLEtBQUtzTCxHQUNuQlIsRUFBSy9DLFdBQVdDLE9BQU9zRCxHQUV2QmhDLEVBQU1ULGlCQUFpQixVQUFVLFdBQ3pCUyxFQUFNWSxTQUVSb0IsRUFBV3BDLFVBQVVDLElBQUksZUFFekJKLFFBQVFDLElBQUl1QyxJQUVWRCxFQUFXcEMsVUFBVXpGLE9BQU8sY0FFcEMsSUFFQTRILEVBQVlaLFFBQ1pZLEVBQVluSCxNQUFNd0UsUUFBVSxPQUM1QkssUUFBUUMsSUFBSThCLEVBQUtmLFNBQ3JCLENBM0NReUIsQ0FBY1YsR0FDZG5HLEVBQUUrRixnQkFDTixFQUVBZSxFQUFjdkQsUUFBVSxTQUFTdkQsR0FDN0JvRSxRQUFRQyxJQUFJLHVCQUNackUsRUFBRStGLGdCQUNOLENBQ0osRURGUVksQ0FBV1IsR0FDWEMsRUFBSzdHLE1BQU13RSxRQUFVLE1BQ3ZCLEVBRUF5QyxFQUFVakQsUUFBVSxXQUVsQixHQUFJcUQsRUFBUUcsU0FBU1osR0FDbkJTLEVBQVFuSSxPQUFPMEgsRUFBSzVLLEdBQUksR0FDeEIsUUFFRyxDQUlILElBQUl5TCxFQUFTYixFQUFLNUssR0FDZDBMLEVBQWdCdEIsRUFBV3VCLE1BQUtDLEdBQVdBLEVBQVFuRSxPQUFTbUUsRUFBUW5FLE1BQU0rRCxTQUFTWixLQUVuRmEsR0FBVSxHQUNackIsRUFBV3NCLEVBQWMxTCxJQUFJeUgsTUFBTXZFLE9BQU91SSxFQUFRLEdBR3BEcEUsRUFBaUJxRSxFQUNuQixDQUNBYixFQUFLN0csTUFBTXdFLFFBQVUsTUFDdkIsRUFFQXJFLFNBQVMwSCxLQUFLakgsWUFBWWlHLEVBQzlCLEdBRUYsQ0UwRE8sU0FBU2pCLElBQ1osSUFBSWtDLEVBQU8zSCxTQUFTc0YsZUFBZSxZQUFZRCxNQVEvQyxPQVBlLElBQUlPLEtBQUsrQixFQVE1QixDQ3BFQSxRQTNDa0IsS0FFZEMsRUFBY3ZFLFlBQWMsR0FLaEMsV0FFSSxJQUFJd0UsRUFBUzdILFNBQVNXLGNBQWMsTUFDcENrSCxFQUFPeEUsWUFBYyxRQUNyQndFLEVBQU9oRCxVQUFVQyxJQUFJLGNBRXJCOEMsRUFBY2pFLE9BQU9rRSxFQUN6QixDQVhJQyxHQWNHLFdBQ0gxRSxFQUFTQyxZQUFjLEdBRXZCLElBQUssSUFBSTNHLEVBQUksRUFBR0EsRUFBSXdLLEVBQVExSyxPQUFRRSxJQUNwQyxDQUNJLElBQUk4RyxFQUFjMEQsRUFBUXhLLEdBQUc4RyxZQUN6QkMsRUFBYXlELEVBQVF4SyxHQUFHK0csV0FDeEJDLEVBQWF3RCxFQUFReEssR0FBR2dILFdBRTVCRixFQUFZRyxPQUFPRixHQUNuQkQsRUFBWUcsT0FBT0QsR0FDbkJOLEVBQVNPLE9BQU9ILEdBRWhCa0IsUUFBUUMsSUFBSXVDLEVBQVF4SyxHQUN4QixDQUVBLElBQUlxTCxFQUFnQi9ILFNBQVNXLGNBQWMsVUFDM0NvSCxFQUFjMUUsWUFBYyxjQUM1QjBFLEVBQWNsRSxRQUFVLFlEbEM1QixTQUFpQmtFLEdBRWIsSUFBSWpFLEVBQWFpRSxFQUFjaEUsd0JBRTNCQyxFQUFZRixFQUFXRyxJQUN2QkMsRUFBYUosRUFBV0ssS0FDNUJDLEVBQVl2RSxNQUFNb0UsSUFBTUQsRUFBWSxLQUNwQ0ksRUFBWXZFLE1BQU1zRSxLQUFPRCxFQUFhLEtBRXRDRSxFQUFZdkUsTUFBTXdFLFFBQVUsUUFDNUJELEVBQVl2RSxNQUFNeUUsTUFBUUMsaUJBQWlCd0QsR0FBZXpELE1BQzFEeUQsRUFBY2xJLE1BQU13RSxRQUFVLE9BRTlCbkUsT0FBT3NFLGlCQUFpQixVQUV4QixXQUNJdUQsRUFBY2xJLE1BQU13RSxRQUFVLFFBQzlCRCxFQUFZdkUsTUFBTXlFLE1BQVFDLGlCQUFpQndELEdBQWV6RCxNQUMxRHlELEVBQWNsSSxNQUFNd0UsUUFBVSxNQUVsQyxJQUVBRCxFQUFZSyxTQUFXLFNBQVNuRSxHQUM1Qm9FLFFBQVFDLElBQUksMkJBWXBCLFNBQW9Cb0QsR0FDaEIsSUFBSW5ELEVBQW9CNUUsU0FBU1csY0FBYyxPQUMvQ2lFLEVBQWtCQyxVQUFVQyxJQUFJLHFCQUVoQyxJQUFJQyxFQUFtQi9FLFNBQVNXLGNBQWMsT0FDOUNvRSxFQUFpQkYsVUFBVUMsSUFBSSxXQUcvQixJQUFJRyxFQUFRakYsU0FBU1csY0FBYyxTQUNuQ3NFLEVBQU1DLEtBQU8sV0FDYkgsRUFBaUJwQixPQUFPc0IsR0FFeEIsSUFBSUUsRUFBaUJuRixTQUFTVyxjQUFjLE9BQzVDd0UsRUFBZU4sVUFBVUMsSUFBSSxrQkFFN0IsSUFBSU0sRUFBV3BGLFNBQVNXLGNBQWMsU0FDdEN5RSxFQUFTRixLQUFPLE9BQ2hCRSxFQUFTQyxNQUFRckYsU0FBU3NGLGVBQWUsWUFBWUQsTUFDckRGLEVBQWV4QixPQUFPeUIsR0FFdEIsSUFBSUcsRUFBV3ZGLFNBQVNXLGNBQWMsU0FDdEM0RSxFQUFTTCxLQUFPLE9BQ2hCSyxFQUFTRixNQUFRckYsU0FBU3NGLGVBQWUsWUFBWUQsTUFDckRGLEVBQWV4QixPQUFPNEIsR0FFdEJSLEVBQWlCcEIsT0FBT3dCLEdBRXhCSSxFQUFTZixpQkFBaUIsVUFBVSxXQUNoQyxJQUFJbUIsRUFBYyxJQUFJQyxLQUFLTCxFQUFTRixPQUVwQ29CLEVBQUtsQixTQUFXSSxDQUNwQixJQUVBLElBQUlYLEVBQW1CaEYsU0FBU1csY0FBYyxPQUM5Q3FFLEVBQWlCSCxVQUFVQyxJQUFJLG9CQUUvQixJQUFJMkIsRUFBTyxDQUNQNUssR0FBSXFMLEVBQVExSyxPQUNaZ0gsWUFBYW9CLEVBQ2JuQixXQUFZc0IsRUFDWnJCLFdBQVlzQixFQUNaTyxTQUFVRSxJQUNWQyxTQUFVLElBR2RRLEVBQVlPLEdBQ1pTLEVBQVF2TCxLQUFLOEssR0FFYnhCLEVBQU1ULGlCQUFpQixVQUFVLFdBQ3pCUyxFQUFNWSxVQUVScUIsRUFBUW5JLE9BQU8wSCxFQUFLNUssR0FBSSxHQUN4QixJQUNBNkksUUFBUUMsSUFBSXVDLEdBRWxCLElBRUFsSCxTQUFTc0YsZUFBZSxZQUFZRCxNQUFRLEdBQzVDakIsRUFBWXZFLE1BQU13RSxRQUFVLE9BQzVCMEQsRUFBY2xJLE1BQU13RSxRQUFVLFFBQzlCLElBQ0FLLFFBQVFDLElBQUl1QyxFQUNoQixDQXpFUWMsQ0FBV0QsR0FDWHpILEVBQUUrRixnQkFDTixFQUVBQyxFQUFXekMsUUFBVSxTQUFTdkQsR0FDMUJvRSxRQUFRQyxJQUFJLHVCQUNackUsRUFBRStGLGlCQWtGVixTQUE0QjBCLEdBQ3hCQSxFQUFjbEksTUFBTXdFLFFBQVUsUUFDOUJELEVBQVl2RSxNQUFNd0UsUUFBVSxNQUNoQyxDQXBGUTRELENBQW1CRixFQUN2QixDQUNKLENDRVFHLENBQVFILEVBQ1osRUFFQUEsRUFBY2xELFVBQVVDLElBQUksaUJBQzVCMUIsRUFBU08sT0FBT29FLEVBQ3BCLENBckNJSSxFQUFjLEVDUlgsU0FBU0MsSUFFWixJQUFJQyxFQUFVckksU0FBU3NJLGlCQUFpQixrQkFFeENELEVBQVFFLFNBQVFDLElBRVpBLEVBQU8zRSxRQUFVLEtBQ2J3RSxFQUFVckksU0FBU3NJLGlCQUFpQixrQkFFcENELEVBQVFFLFNBQVFDLEdBQVVBLEVBQU8zRCxVQUFVekYsT0FBTyxzQkFDbERvSixFQUFPM0QsVUFBVUMsSUFBSSxtQkFBbUIsQ0FDM0MsR0FFVCxDQ0VBLFNBQVMyRCxFQUFnQm5JLEdBQ3JCb0ksRUFBWXRDLFFBQ1pzQyxFQUFZN0ksTUFBTXdFLFFBQVUsT0FDNUIvRCxFQUFFK0YsZ0JBQ04sQ0NYc0JyRyxTQUFTQyxjQUFjLFlBQTdDLE1BQ00ySCxFQUFnQjVILFNBQVNDLGNBQWMsa0JBR3ZDbUQsR0FEZ0JwRCxTQUFTQyxjQUFjLGtCQUM1QkQsU0FBU0MsY0FBYyxjQUNsQzBJLEVBQW1CM0ksU0FBU3NGLGVBQWUsb0JBRTNDbEIsRUFBY3BFLFNBQVNDLGNBQWMsZ0JBRXJDcUcsR0FEZ0J0RyxTQUFTc0YsZUFBZSxpQkFDM0J0RixTQUFTc0YsZUFBZSxlQUVyQzBCLEVBQWNoSCxTQUFTQyxjQUFjLGdCQUVyQ21ILEdBRGdCcEgsU0FBU3NGLGVBQWUsaUJBQ3hCdEYsU0FBU3NGLGVBQWUsa0JBRXhDb0QsRUFBYzFJLFNBQVNDLGNBQWMsZ0JBR3JDMkksR0FEYTVJLFNBQVNzRixlQUFlLGNBQ3JCdEYsU0FBU3NGLGVBQWUsa0JBQ3hDb0IsRUFBTzFHLFNBQVNzRixlQUFlLGVBRy9CNEIsRUFBVSxHQUNWakIsRUFBYSxHQUVEakcsU0FBU0MsY0FBYyxVQUM3QnVFLGlCQUFpQixRQUFTLEdBRXBCeEUsU0FBU0MsY0FBYyxVQUM3QnVFLGlCQUFpQixTQ25DWCxLQUNkcEIsRUFBU0MsWUFBYyxHQUN2QnVFLEVBQWN2RSxZQUFjLEdBRTVCLElBQUl3RSxFQUFTN0gsU0FBU1csY0FBYyxNQUNwQ2tILEVBQU94RSxZQUFjLFFBQ3JCd0UsRUFBT2hELFVBQVVDLElBQUksY0FFckI4QyxFQUFjakUsT0FBT2tFLEdBRXJCLElBQUlnQixFQUFjLElBQUlqRCxLQUV0QmxCLFFBQVFDLElBQUksZ0JBQWtCa0UsR0FFOUIsSUFBSyxJQUFJbk0sRUFBSSxFQUFHQSxFQUFJd0ssRUFBUTFLLE9BQVFFLElBQ3BDLENBQ0ksSUFBSStKLEVBQU9TLEVBQVF4SyxHQUNmNkksRUFBV2tCLEVBQUtsQixTQUdwQixHQURBYixRQUFRQyxJQUFJLDBCQUE0QlksR0FFcENzRCxFQUFZQyxnQkFBa0J2RCxFQUFTdUQsZUFDdkNELEVBQVlFLGFBQWV4RCxFQUFTd0QsWUFDcENGLEVBQVlHLFlBQWN6RCxFQUFTeUQsVUFDckMsQ0FDRSxJQUFJeEYsRUFBY2lELEVBQUtqRCxZQUNuQkMsRUFBYWdELEVBQUtoRCxXQUNsQkMsRUFBYStDLEVBQUsvQyxXQUV0QkYsRUFBWUcsT0FBT0YsR0FDbkJELEVBQVlHLE9BQU9ELEdBQ25CTixFQUFTTyxPQUFPSCxFQUNwQixDQUNKLEtESWV4RCxTQUFTQyxjQUFjLFNBQzdCdUUsaUJBQWlCLFNFdENiLEtBQ2JwQixFQUFTQyxZQUFjLEdBQ3ZCdUUsRUFBY3ZFLFlBQWMsR0FFNUIsSUFBSXdFLEVBQVM3SCxTQUFTVyxjQUFjLE1BQ3BDa0gsRUFBT3hFLFlBQWMsWUFDckJ3RSxFQUFPaEQsVUFBVUMsSUFBSSxjQUVyQjhDLEVBQWNqRSxPQUFPa0UsR0FFckIsSUFBSWdCLEVBQWMsSUFBSWpELEtBQ2xCcUQsRUFBbUJKLEVBQVlLLFNBRy9CQyxFQUFjLElBQUl2RCxLQUFLaUQsR0FDM0JNLEVBQVlDLFFBQVFQLEVBQVlHLFVBQVlDLEVBQW1CLEdBQy9ERSxFQUFZRSxTQUFTLEVBQUcsRUFBRyxFQUFHLEdBRzlCLElBQUlDLEVBQVksSUFBSTFELEtBQUtpRCxHQUN6QlMsRUFBVUYsUUFBUVAsRUFBWUcsV0FBYSxFQUFJQyxHQUFvQixHQUNuRUssRUFBVUQsU0FBUyxHQUFJLEdBQUksR0FBSSxLQUUvQjNFLFFBQVFDLElBQUksZ0JBQWtCa0UsR0FDOUJuRSxRQUFRQyxJQUFJLGlCQUFtQndFLEVBQWMsb0JBQXNCRyxHQUVuRSxJQUFLLElBQUk1TSxFQUFJLEVBQUdBLEVBQUl3SyxFQUFRMUssT0FBUUUsSUFDcEMsQ0FDSSxJQUFJK0osRUFBT1MsRUFBUXhLLEdBQ2Y2SSxFQUFXa0IsRUFBS2xCLFNBR3BCLEdBRkFiLFFBQVFDLElBQUksMEJBQTRCWSxHQUVwQ0EsR0FBWTRELEdBQWU1RCxHQUFZK0QsRUFDM0MsQ0FDSSxJQUFJOUYsRUFBY2lELEVBQUtqRCxZQUNuQkMsRUFBYWdELEVBQUtoRCxXQUNsQkMsRUFBYStDLEVBQUsvQyxXQUV0QkYsRUFBWUcsT0FBT0YsR0FDbkJELEVBQVlHLE9BQU9ELEdBQ25CTixFQUFTTyxPQUFPSCxFQUNwQixDQUNKLEtGRm1CeEQsU0FBU0MsY0FBYyxlQUM3QjRELFFEdkNWLFdBQ0g2RSxFQUFZN0ksTUFBTXdFLFFBQVUsT0FFNUJxRSxFQUFZakUsU0FBVyxTQUFTbkUsSUFjcEMsV0FDSSxJQUFJaUosRUFBbUJ2SixTQUFTVyxjQUFjLFVBQzlDNEksRUFBaUIxRSxVQUFVQyxJQUFJLGNBQy9CeUUsRUFBaUIxRSxVQUFVQyxJQUFJLGlCQUUvQixJQUFJMEUsRUFBY3hKLFNBQVNzRixlQUFlLGVBQWVELE1BQ3pEa0UsRUFBaUJsRyxZQUFjbUcsRUFFL0IsSUFBSXJHLEVBQWEsQ0FDYnRILEdBQUlvSyxFQUFXekosT0FDZmlOLEtBQU1ELEVBQ05sRyxNQUFPLElBR1hxRixFQUFpQmhGLE9BQU80RixHQUN4QnRELEVBQVd0SyxLQUFLd0gsR0FFaEJpRixJQUVBbUIsRUFBaUIvRSxpQkFBaUIsU0FBUyxXUHBDcEIsQ0FBQ3JCLElBQ3hCQyxFQUFTQyxZQUFjLEdBQ3ZCdUUsRUFBY3ZFLFlBQWMsR0FNaEMsU0FBdUJGLEdBRW5CeUUsRUFBY3ZFLFlBQWMsR0FFNUIsSUFBSXdFLEVBQVM3SCxTQUFTVyxjQUFjLE1BQ3BDa0gsRUFBT3hFLFlBQWNGLEVBQVdzRyxLQUNoQzVCLEVBQU9oRCxVQUFVQyxJQUFJLGNBRXJCOEMsRUFBY2pFLE9BQU9rRSxFQUN6QixDQWJJNkIsQ0FBY3ZHLEdBQ2RELEVBQWlCQyxFQUFXLEVPZ0N4QndHLENBQVl4RyxFQUNoQixHQUNKLENBbkNReUcsR0FDQWxCLEVBQVl0QyxRQUNaOUYsRUFBRStGLGdCQUNOLEVBQ0F1QyxFQUFjL0UsUUFBVTRFLENBQzVCLEVDZ0NBTCxJQUNBMUQsUUFBUUMsSUFBSSxZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Byb2plY3RzL2xvYWRQcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Byb2plY3RzL3Byb2plY3RUYXNrLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Rhc2tzL3Rhc2tNZW51LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Rhc2tzL3N1YlRhc2tzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Rhc2tzL3Rhc2tzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2luYm94LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3NpZGVCYXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvcHJvamVjdHMvY3JlYXRlUHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvdG9kYXkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvd2Vlay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgKiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFmMjkzNztcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuI2hlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDU1cHg7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExODI3OyBcbiAgICBjb2xvcjogd2hpdGU7XG59XG5cbiNoZWFkZXIgaDEge1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xuICAgIGZvbnQtZmFtaWx5OiAnVHJlYnVjaGV0IE1TJywgJ0x1Y2lkYSBTYW5zIFVuaWNvZGUnLCAnTHVjaWRhIEdyYW5kZScsICdMdWNpZGEgU2FucycsIEFyaWFsLCBzYW5zLXNlcmlmO1xufVxuXG4jY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDU1cHg7XG59XG5cbiNzaWRlQmFyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleDogMTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNTVweCk7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgZ2FwOiAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMzA3MTI7XG59XG5cbiNzaWRlQmFyIC5idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuI3NpZGVCYXIgLmJ1dHRvbnMgYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYyOTM3NTc7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgY29sb3I6IHdoaXRlO1xufVxuXG4jc2lkZUJhciAuYnV0dG9ucyBidXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiYmJiYmIzYjtcbn1cblxuI3NpZGVCYXIgLmJ1dHRvbnMgLmhpZ2hsaWdodC1idXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiYmJiYmI1NDtcbn1cblxuI3NpZGVCYXIgLmJ1dHRvbnMgLmhpZ2hsaWdodC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiYmJiYmI1NDtcbn1cblxuI2NvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA1NXB4KTtcbiAgICB3aWR0aDogY2FsYygxMDB2dyAtIDI1MHB4KTtcblxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBtYXJnaW4tbGVmdDogMjUwcHg7XG4gICAgZ2FwOiAxMHB4O1xuICAgIHBhZGRpbmc6IDgwcHg7XG4gICAgcGFkZGluZy10b3A6IDE1cHg7XG59XG5cbiNjb250ZW50IC5jb250ZW50SGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDEwcHg7XG59XG5cbi5wYWdlSGVhZGVyIHtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgIGZvbnQtZmFtaWx5OiAnVHJlYnVjaGV0IE1TJywgJ0x1Y2lkYSBTYW5zIFVuaWNvZGUnLCAnTHVjaWRhIEdyYW5kZScsICdMdWNpZGEgU2FucycsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbn1cblxuI2NvbnRlbnQgLnRhc2tDb250YWluZXIgLnRhc2tMaXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDEwcHg7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuLm1haW5UYXNrQ29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJVxufVxuXG4ubmV3VGFza0J1dHRvbiB7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubmV3VGFzayB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGhlaWdodDogMzVweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDRkNGQ4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5uZXdUYXNrQ29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcbn1cblxuLm5ld1Rhc2sgaW5wdXQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYwMDtcbiAgICBib3JkZXI6IG5vbmU7XG59XG5cbi5uZXdUYXNrRm9ybSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbn1cblxuLm5ld1Rhc2tGb3JtIC5mb3JtQ29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgY29sb3I6IHdoaXRlO1xufVxuXG5cbi5zdWJUYXNrRm9ybSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLnN1YlRhc2tDb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDRweDtcbn1cblxuLnN1YlRhc2tDb250YWluZXIgLnN1YlRhc2sge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5zdWJUYXNrIGlucHV0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmMDA7XG4gICAgYm9yZGVyOiBub25lO1xufVxuXG4uc3ViVGFza0NvbnRhaW5lciAuc3ViVGFza0RvbmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWFtYXJpbmU7XG59XG5cblxuXG5cblxuLnByb2plY3RzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiKDIxMiwgMjEyLCAyMTIpO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE1cHg7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDE1cHg7XG59XG5cblxuLnByb2plY3RIZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgY29sb3I6IHdoaXRlO1xufVxuXG4ucHJvamVjdEhlYWRlciBoNCwgYnV0dG9uIHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi5wcm9qZWN0Rm9ybSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG5cbiNwcm9qZWN0Q29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiA0cHg7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG59XG5cbiNwcm9qZWN0Q29udGFpbmVyIC5uZXdQcm9qZWN0IHtcbiAgICBoZWlnaHQ6IDQwcHg7XG59XG5cbiNwcm9qZWN0Q29udGFpbmVyIGJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0ZDRkODtcbn1cblxuI3Byb2plY3RDb250YWluZXIgLmhpZ2hsaWdodC1idXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM3MTcxN2E7XG59XG5cblxuXG5cbiNjdXN0b20tbWVudSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIHBhZGRpbmc6IDVweDtcbn1cbiAgXG4jY3VzdG9tLW1lbnUgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG4gIFxuI2N1c3RvbS1tZW51IGxpIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogNXB4O1xufVxuICBcbiNjdXN0b20tbWVudSBsaTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLFlBQVk7SUFDWixXQUFXOztJ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QUNULFVBQVU7QUFDZDs7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0FBQ2hCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIHdpZHRoOiAxMDAlO1xcblxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYyOTM3O1xcblxcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4jaGVhZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgaGVpZ2h0OiA1NXB4O1xcbiAgICB3aWR0aDogMTAwdnc7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExODI3OyBcXG4gICAgY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4jaGVhZGVyIGgxIHtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIG1hcmdpbi1sZWZ0OiAxMDBweDtcXG4gICAgZm9udC1mYW1pbHk6ICdUcmVidWNoZXQgTVMnLCAnTHVjaWRhIFNhbnMgVW5pY29kZScsICdMdWNpZGEgR3JhbmRlJywgJ0x1Y2lkYSBTYW5zJywgQXJpYWwsIHNhbnMtc2VyaWY7XFxufVxcblxcbiNjb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHRvcDogNTVweDtcXG59XFxuXFxuI3NpZGVCYXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBmbGV4OiAxO1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDU1cHgpO1xcbiAgICB3aWR0aDogMjUwcHg7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGdhcDogMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAzMDcxMjtcXG59XFxuXFxuI3NpZGVCYXIgLmJ1dHRvbnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcbn1cXG5cXG4jc2lkZUJhciAuYnV0dG9ucyBidXR0b24ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYyOTM3NTc7XFxuICAgIHBhZGRpbmc6IDhweDtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBjb2xvcjogd2hpdGU7XFxufVxcblxcbiNzaWRlQmFyIC5idXR0b25zIGJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiYmJiYmIzYjtcXG59XFxuXFxuI3NpZGVCYXIgLmJ1dHRvbnMgLmhpZ2hsaWdodC1idXR0b24ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmJiYmJiNTQ7XFxufVxcblxcbiNzaWRlQmFyIC5idXR0b25zIC5oaWdobGlnaHQtYnV0dG9uOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JiYmJiYjU0O1xcbn1cXG5cXG4jY29udGVudCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNTVweCk7XFxuICAgIHdpZHRoOiBjYWxjKDEwMHZ3IC0gMjUwcHgpO1xcblxcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIG1hcmdpbi1sZWZ0OiAyNTBweDtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBwYWRkaW5nOiA4MHB4O1xcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcXG59XFxuXFxuI2NvbnRlbnQgLmNvbnRlbnRIZWFkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi5wYWdlSGVhZGVyIHtcXG4gICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcXG4gICAgZm9udC1mYW1pbHk6ICdUcmVidWNoZXQgTVMnLCAnTHVjaWRhIFNhbnMgVW5pY29kZScsICdMdWNpZGEgR3JhbmRlJywgJ0x1Y2lkYSBTYW5zJywgQXJpYWwsIHNhbnMtc2VyaWY7XFxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcXG59XFxuXFxuI2NvbnRlbnQgLnRhc2tDb250YWluZXIgLnRhc2tMaXN0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xcbn1cXG5cXG4ubWFpblRhc2tDb250YWluZXIge1xcbiAgICB3aWR0aDogMTAwJVxcbn1cXG5cXG4ubmV3VGFza0J1dHRvbiB7XFxuICAgIGhlaWdodDogNTBweDtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5uZXdUYXNrIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgaGVpZ2h0OiAzNXB4O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0ZDRkODtcXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG59XFxuXFxuLm5ld1Rhc2tDb250ZW50IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcXG59XFxuXFxuLm5ld1Rhc2sgaW5wdXQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmMDA7XFxuICAgIGJvcmRlcjogbm9uZTtcXG59XFxuXFxuLm5ld1Rhc2tGb3JtIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcblxcbi5uZXdUYXNrRm9ybSAuZm9ybUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuXFxuLnN1YlRhc2tGb3JtIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnN1YlRhc2tDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDRweDtcXG59XFxuXFxuLnN1YlRhc2tDb250YWluZXIgLnN1YlRhc2sge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcblxcbi5zdWJUYXNrIGlucHV0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjAwO1xcbiAgICBib3JkZXI6IG5vbmU7XFxufVxcblxcbi5zdWJUYXNrQ29udGFpbmVyIC5zdWJUYXNrRG9uZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWFtYXJpbmU7XFxufVxcblxcblxcblxcblxcblxcbi5wcm9qZWN0cyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiKDIxMiwgMjEyLCAyMTIpO1xcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxNXB4O1xcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTVweDtcXG59XFxuXFxuXFxuLnByb2plY3RIZWFkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuLnByb2plY3RIZWFkZXIgaDQsIGJ1dHRvbiB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLnByb2plY3RGb3JtIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxufVxcblxcblxcbiNwcm9qZWN0Q29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA0cHg7XFxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xcbn1cXG5cXG4jcHJvamVjdENvbnRhaW5lciAubmV3UHJvamVjdCB7XFxuICAgIGhlaWdodDogNDBweDtcXG59XFxuXFxuI3Byb2plY3RDb250YWluZXIgYnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0ZDRkODtcXG59XFxuXFxuI3Byb2plY3RDb250YWluZXIgLmhpZ2hsaWdodC1idXR0b24ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzE3MTdhO1xcbn1cXG5cXG5cXG5cXG5cXG4jY3VzdG9tLW1lbnUge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuICBcXG4jY3VzdG9tLW1lbnUgdWwge1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcbiAgXFxuI2N1c3RvbS1tZW51IGxpIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBwYWRkaW5nOiA1cHg7XFxufVxcbiAgXFxuI2N1c3RvbS1tZW51IGxpOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IGNvbnRlbnRIZWFkZXIsIHRhc2tDb250YWluZXIsIG5ld1Rhc2tGb3JtLCBjYW5jZWxUYXNrLCB0YXNrTGlzdCB9IGZyb20gXCIuLi8uLlwiO1xuaW1wb3J0IHsgbmV3UHJvamVjdFRhc2sgfSBmcm9tIFwiLi9wcm9qZWN0VGFza1wiO1xuXG5cbmV4cG9ydCBjb25zdCBsb2FkUHJvamVjdCA9IChuZXdQcm9qZWN0KSA9PiB7XG4gICAgdGFza0xpc3QudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGNvbnRlbnRIZWFkZXIudGV4dENvbnRlbnQgPSBcIlwiO1xuXG4gICAgcHJvamVjdEhlYWRlcihuZXdQcm9qZWN0KTtcbiAgICBzaG93UHJvamVjdFRhc2tzKG5ld1Byb2plY3QpO1xufVxuXG5mdW5jdGlvbiBwcm9qZWN0SGVhZGVyKG5ld1Byb2plY3QpIHtcblxuICAgIGNvbnRlbnRIZWFkZXIudGV4dENvbnRlbnQgPSBcIlwiO1xuXG4gICAgbGV0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJylcbiAgICBoZWFkZXIudGV4dENvbnRlbnQgPSBuZXdQcm9qZWN0Lm5hbWU7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoJ3BhZ2VIZWFkZXInKTtcblxuICAgIGNvbnRlbnRIZWFkZXIuYXBwZW5kKGhlYWRlcik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93UHJvamVjdFRhc2tzKG5ld1Byb2plY3QpIHtcbiAgICB0YXNrTGlzdC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZXdQcm9qZWN0LnRhc2tzLmxlbmd0aDsgaSsrKVxuICAgIHtcbiAgICAgICAgbGV0IHByb2plY3RUYXNrcyA9IG5ld1Byb2plY3QudGFza3NbaV07XG5cbiAgICAgICAgbGV0IG1haW5UYXNrRGl2ID0gcHJvamVjdFRhc2tzLm1haW5UYXNrRGl2O1xuICAgICAgICBsZXQgbmV3VGFza0RpdiA9IHByb2plY3RUYXNrcy5uZXdUYXNrRGl2O1xuICAgICAgICBsZXQgc3ViVGFza0RpdiA9IHByb2plY3RUYXNrcy5zdWJUYXNrRGl2O1xuXG4gICAgICAgIG1haW5UYXNrRGl2LmFwcGVuZChuZXdUYXNrRGl2KTtcbiAgICAgICAgbWFpblRhc2tEaXYuYXBwZW5kKHN1YlRhc2tEaXYpO1xuICAgICAgICB0YXNrTGlzdC5hcHBlbmQobWFpblRhc2tEaXYpO1xuICAgIH1cblxuXG4gICAgbGV0IG5ld1Byb2plY3RUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgbmV3UHJvamVjdFRhc2tCdXR0b24udGV4dENvbnRlbnQgPSBcIm5ldyBidXR0b24hXCI7XG5cbiAgICBuZXdQcm9qZWN0VGFza0J1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIG5ld1Byb2plY3RUYXNrKG5ld1Byb2plY3RUYXNrQnV0dG9uLCBuZXdQcm9qZWN0KTtcbiAgICB9O1xuXG4gICAgbmV3UHJvamVjdFRhc2tCdXR0b24uY2xhc3NMaXN0LmFkZCgnbmV3VGFza0J1dHRvbicpO1xuICAgIHRhc2tMaXN0LmFwcGVuZChuZXdQcm9qZWN0VGFza0J1dHRvbik7XG59IiwiaW1wb3J0IHsgbmV3VGFza0Zvcm0sIGNhbmNlbFRhc2ssIG15UHJvamVjdHMgfSBmcm9tIFwiLi4vLi5cIjtcbmltcG9ydCB7IHNob3dQcm9qZWN0VGFza3MgfSBmcm9tIFwiLi9sb2FkUHJvamVjdFwiO1xuaW1wb3J0IHsgZ2V0VGFza0RhdGUgfSBmcm9tIFwiLi4vdGFza3MvdGFza3NcIjtcbmltcG9ydCB7IGRpc3BsYXlNZW51IH0gZnJvbSBcIi4uL3Rhc2tzL3Rhc2tNZW51XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdQcm9qZWN0VGFzayhuZXdQcm9qZWN0VGFza0J1dHRvbiwgbmV3UHJvamVjdCkge1xuICAgIC8vIFBvc2l0aW9uIHRoZSBmb3JtIGV4YWN0bHkgd2hlcmUgdGhlIGJ1dHRvbiBpc1xuICAgIHZhciBidXR0b25SZWN0ID0gbmV3UHJvamVjdFRhc2tCdXR0b24uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICB2YXIgYnV0dG9uVG9wID0gYnV0dG9uUmVjdC50b3A7XG4gICAgdmFyIGJ1dHRvbkxlZnQgPSBidXR0b25SZWN0LmxlZnQ7XG4gICAgbmV3VGFza0Zvcm0uc3R5bGUudG9wID0gYnV0dG9uVG9wICsgJ3B4JztcbiAgICBuZXdUYXNrRm9ybS5zdHlsZS5sZWZ0ID0gYnV0dG9uTGVmdCArICdweCc7XG5cbiAgICBuZXdUYXNrRm9ybS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBuZXdUYXNrRm9ybS5zdHlsZS53aWR0aCA9IGdldENvbXB1dGVkU3R5bGUobmV3UHJvamVjdFRhc2tCdXR0b24pLndpZHRoO1xuICAgIG5ld1Byb2plY3RUYXNrQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdXBkYXRlV2lkdGgpO1xuXG4gICAgZnVuY3Rpb24gdXBkYXRlV2lkdGgoKSB7XG4gICAgICAgIG5ld1Byb2plY3RUYXNrQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICBuZXdUYXNrRm9ybS5zdHlsZS53aWR0aCA9IGdldENvbXB1dGVkU3R5bGUobmV3UHJvamVjdFRhc2tCdXR0b24pLndpZHRoO1xuICAgICAgICBuZXdQcm9qZWN0VGFza0J1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH1cblxuICAgIG5ld1Rhc2tGb3JtLm9uc3VibWl0ID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnc3VibWl0IG5ldyB0YXNrIGNsaWNrZWQnKVxuICAgICAgICBhZGROZXdQcm9qZWN0VGFzayhuZXdQcm9qZWN0KTsgLy9jcmVhdGUgbmV3IHRhc2sgY2FyZFxuXG4gICAgICAgIG5ld1Byb2plY3RUYXNrQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICBuZXdUYXNrRm9ybS5yZXNldCgpO1xuICAgICAgICBuZXdUYXNrRm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfTtcblxuICAgIGNhbmNlbFRhc2sub25jbGljayA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2NhbmNlbCB0YXNrIGNsaWNrZWQnKVxuXG4gICAgICAgIG5ld1Byb2plY3RUYXNrQnV0dG9uLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG4gICAgICAgIG5ld1Rhc2tGb3JtLnJlc2V0KCk7XG4gICAgICAgIG5ld1Rhc2tGb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGFkZE5ld1Byb2plY3RUYXNrKG5ld1Byb2plY3QpIHtcbiAgICBsZXQgbWFpblRhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBtYWluVGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdtYWluVGFza0NvbnRhaW5lcicpO1xuXG4gICAgbGV0IG5ld1Rhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBuZXdUYXNrQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ25ld1Rhc2snKTtcblxuICAgIGxldCBzdWJUYXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc3ViVGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzdWJUYXNrQ29udGFpbmVyJyk7XG5cbiAgICBsZXQgY2hlY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGNoZWNrLnR5cGUgPSBcImNoZWNrYm94XCI7XG4gICAgbmV3VGFza0NvbnRhaW5lci5hcHBlbmQoY2hlY2spO1xuXG4gICAgbGV0IG5ld1Rhc2tDb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbmV3VGFza0NvbnRlbnQuY2xhc3NMaXN0LmFkZCgnbmV3VGFza0NvbnRlbnQnKTtcblxuICAgIGxldCB0YXNrTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgdGFza05hbWUudHlwZSA9ICd0ZXh0JztcbiAgICB0YXNrTmFtZS52YWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrTmFtZScpLnZhbHVlO1xuICAgIG5ld1Rhc2tDb250ZW50LmFwcGVuZCh0YXNrTmFtZSk7XG5cbiAgICBsZXQgdGFza0RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHRhc2tEYXRlLnR5cGUgPSAnZGF0ZSc7XG4gICAgdGFza0RhdGUudmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza0RhdGUnKS52YWx1ZTtcbiAgICBuZXdUYXNrQ29udGVudC5hcHBlbmQodGFza0RhdGUpO1xuXG4gICAgbmV3VGFza0NvbnRhaW5lci5hcHBlbmQobmV3VGFza0NvbnRlbnQpO1xuXG4gICAgbGV0IHByb2plY3RUYXNrID0ge1xuICAgICAgICBpZDogbmV3UHJvamVjdC50YXNrcy5sZW5ndGgsXG4gICAgICAgIHRhc2tEYXRlOiBnZXRUYXNrRGF0ZSgpLFxuICAgICAgICBzdWJUYXNrczogW10sXG4gICAgICAgIG1haW5UYXNrRGl2OiBtYWluVGFza0NvbnRhaW5lcixcbiAgICAgICAgbmV3VGFza0RpdjogbmV3VGFza0NvbnRhaW5lcixcbiAgICAgICAgc3ViVGFza0Rpdjogc3ViVGFza0NvbnRhaW5lclxuICAgIH1cblxuICAgIHRhc2tEYXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICBsZXQgbmV3VGFza0RhdGUgPSBuZXcgRGF0ZSh0YXNrRGF0ZS52YWx1ZSk7XG4gICAgICAgIC8vIFVwZGF0ZSB0aGUgdGFzayBvYmplY3Qgd2l0aCB0aGUgbmV3IHRhc2sgZGF0ZVxuICAgICAgICBwcm9qZWN0VGFzay50YXNrRGF0ZSA9IG5ld1Rhc2tEYXRlO1xuICAgIH0pO1xuXG5cbiAgICBjaGVjay5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKGNoZWNrLmNoZWNrZWQpIHtcbiAgICAgICAgICAvLyBNYXJrIHRhc2sgYXMgY29tcGxldGVkXG4gICAgICAgICAgbGV0IHByb2plY3RJZCA9IG5ld1Byb2plY3QuaWQ7XG4gICAgICAgICAgbGV0IHRhc2tJbmRleCA9IG5ld1Byb2plY3QudGFza3MuaW5kZXhPZihwcm9qZWN0VGFzayk7XG4gICAgICBcbiAgICAgICAgICBpZiAodGFza0luZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIG15UHJvamVjdHNbcHJvamVjdElkXS50YXNrcy5zcGxpY2UodGFza0luZGV4LCAxKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzaG93UHJvamVjdFRhc2tzKG5ld1Byb2plY3QpO1xuICAgICAgICB9IFxuICAgIH0pO1xuXG4gICAgZGlzcGxheU1lbnUocHJvamVjdFRhc2spO1xuICAgIG5ld1Byb2plY3QudGFza3MucHVzaChwcm9qZWN0VGFzayk7XG5cbiAgICBzaG93UHJvamVjdFRhc2tzKG5ld1Byb2plY3QpO1xufSIsImltcG9ydCB7IG1lbnUsIG15VGFza3MsIG15UHJvamVjdHMgfSBmcm9tIFwiLi4vLi5cIjtcbmltcG9ydCBsb2FkSW5ib3ggZnJvbSBcIi4uL2luYm94XCI7XG5pbXBvcnQgeyBuZXdTdWJUYXNrIH0gZnJvbSBcIi4vc3ViVGFza3NcIjtcbmltcG9ydCB7IHNob3dQcm9qZWN0VGFza3MgfSBmcm9tIFwiLi4vcHJvamVjdHMvbG9hZFByb2plY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlNZW51KHRhc2spIHtcbiAgdGFzay5uZXdUYXNrRGl2LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24oZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOyAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IHJpZ2h0LWNsaWNrIG1lbnUgZnJvbSBhcHBlYXJpbmdcbiAgICAgIFxuICAgICAgLy8gU2V0IHRoZSBwb3NpdGlvbiBvZiB0aGUgY3VzdG9tIG1lbnUgYmFzZWQgb24gdGhlIG1vdXNlIGNvb3JkaW5hdGVzXG4gICAgICBtZW51LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgbWVudS5zdHlsZS5sZWZ0ID0gYCR7ZS5wYWdlWH1weGA7XG4gICAgICBtZW51LnN0eWxlLnRvcCA9IGAke2UucGFnZVl9cHhgO1xuXG4gICAgICBjb25zdCBtZW51SXRlbTEgPSBtZW51LnF1ZXJ5U2VsZWN0b3IoJyNtZW51LWl0ZW0tMScpO1xuICAgICAgY29uc3QgbWVudUl0ZW0yID0gbWVudS5xdWVyeVNlbGVjdG9yKCcjbWVudS1pdGVtLTInKTtcbiAgICBcbiAgICAgIG1lbnVJdGVtMS5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIG5ld1N1YlRhc2sodGFzayk7XG4gICAgICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIH07XG4gICAgXG4gICAgICBtZW51SXRlbTIub25jbGljayA9IGZ1bmN0aW9uKCkgXG4gICAgICB7XG4gICAgICAgIGlmIChteVRhc2tzLmluY2x1ZGVzKHRhc2spKSB7XG4gICAgICAgICAgbXlUYXNrcy5zcGxpY2UodGFzay5pZCwgMSk7XG4gICAgICAgICAgbG9hZEluYm94KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgLy8gbGV0IHByb2plY3RJZCA9IG5ld1Byb2plY3QuaWQ7XG4gICAgICAgICAgLy8gbGV0IHRhc2tJbmRleCA9IG5ld1Byb2plY3QudGFza3MuaW5kZXhPZihwcm9qZWN0VGFzayk7XG5cbiAgICAgICAgICBsZXQgdGFza0lEID0gdGFzay5pZDtcbiAgICAgICAgICBsZXQgcGFyZW50UHJvamVjdCA9IG15UHJvamVjdHMuZmluZChwcm9qZWN0ID0+IHByb2plY3QudGFza3MgJiYgcHJvamVjdC50YXNrcy5pbmNsdWRlcyh0YXNrKSk7XG4gICAgICAgIFxuICAgICAgICAgIGlmICh0YXNrSUQgPiAtMSkge1xuICAgICAgICAgICAgbXlQcm9qZWN0c1twYXJlbnRQcm9qZWN0LmlkXS50YXNrcy5zcGxpY2UodGFza0lELCAxKTtcbiAgICAgICAgICB9XG4gIFxuICAgICAgICAgIHNob3dQcm9qZWN0VGFza3MocGFyZW50UHJvamVjdCk7XG4gICAgICAgIH0gIFxuICAgICAgICBtZW51LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7ICBcbiAgICAgIH07XG4gICAgICAvLyBBcHBlbmQgdGhlIG1lbnUgdG8gdGhlIGRvY3VtZW50IGJvZHlcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobWVudSk7XG4gIH0pO1xuXG59IiwiaW1wb3J0IHsgc3ViVGFza0Zvcm0sIGNhbmNlbFN1YlRhc2ssIG15VGFza3MgfSBmcm9tIFwiLi4vLi5cIjtcbmltcG9ydCB7IHNob3dBbGxUYXNrcyB9IGZyb20gXCIuLi9pbmJveFwiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdTdWJUYXNrKHRhc2spIHtcblxuICAgIHRhc2suc3ViVGFza0Rpdi5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyZW5kJywgc3ViVGFza0Zvcm0pO1xuXG4gICAgc3ViVGFza0Zvcm0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cbiAgICBzdWJUYXNrRm9ybS5vbnN1Ym1pdCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3N1Ym1pdCBzdWJ0YXNrIGNsaWNrZWQnKVxuICAgICAgICBhZGROZXdTdWJUYXNrKHRhc2spOyAvL2NyZWF0ZSBuZXcgc3VidGFzayBjYXJkXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9O1xuXG4gICAgY2FuY2VsU3ViVGFzay5vbmNsaWNrID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnY2FuY2VsIHRhc2sgY2xpY2tlZCcpXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGFkZE5ld1N1YlRhc2sodGFzaykge1xuXG4gICAgbGV0IG5ld1N1YlRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBuZXdTdWJUYXNrLmNsYXNzTGlzdC5hZGQoJ3N1YlRhc2snKTtcblxuICAgIGxldCBjaGVjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgY2hlY2sudHlwZSA9IFwiY2hlY2tib3hcIjtcbiAgICBuZXdTdWJUYXNrLmFwcGVuZChjaGVjayk7XG5cbiAgICBsZXQgdGFza05hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHRhc2tOYW1lLnR5cGUgPSAndGV4dCc7XG4gICAgdGFza05hbWUudmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3ViVGFza05hbWUnKS52YWx1ZTtcbiAgICBuZXdTdWJUYXNrLmFwcGVuZCh0YXNrTmFtZSk7XG5cbiAgICBuZXdTdWJUYXNrLnNldEF0dHJpYnV0ZShcImRhdGEtaW5kZXhcIiwgdGFzay5zdWJUYXNrcy5sZW5ndGgpO1xuXG4gICAgdGFzay5zdWJUYXNrcy5wdXNoKG5ld1N1YlRhc2spO1xuICAgIHRhc2suc3ViVGFza0Rpdi5hcHBlbmQobmV3U3ViVGFzayk7XG5cbiAgICBjaGVjay5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKGNoZWNrLmNoZWNrZWQpIHtcbiAgICAgICAgICAvLyBNYXJrIHRhc2sgYXMgY29tcGxldGVkXG4gICAgICAgICAgbmV3U3ViVGFzay5jbGFzc0xpc3QuYWRkKCdzdWJUYXNrRG9uZScpO1xuICAgICAgICAgIFxuICAgICAgICAgIGNvbnNvbGUubG9nKG15VGFza3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV3U3ViVGFzay5jbGFzc0xpc3QucmVtb3ZlKCdzdWJUYXNrRG9uZScpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBzdWJUYXNrRm9ybS5yZXNldCgpO1xuICAgIHN1YlRhc2tGb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgY29uc29sZS5sb2codGFzay5zdWJUYXNrcyk7XG59IiwiaW1wb3J0IHsgbXlUYXNrcywgbmV3VGFza0Zvcm0sIGNhbmNlbFRhc2ssIHRhc2tDb250YWluZXIgfSBmcm9tIFwiLi4vLi5cIjtcbmltcG9ydCBsb2FkSW5ib3ggZnJvbSBcIi4uL2luYm94XCI7XG5pbXBvcnQgeyBkaXNwbGF5TWVudSB9IGZyb20gXCIuL3Rhc2tNZW51XCI7XG5cblxuZnVuY3Rpb24gbmV3VGFzayhuZXdUYXNrQnV0dG9uKSB7XG4gICAgLy8gUG9zaXRpb24gdGhlIGZvcm0gZXhhY3RseSB3aGVyZSB0aGUgYnV0dG9uIGlzXG4gICAgdmFyIGJ1dHRvblJlY3QgPSBuZXdUYXNrQnV0dG9uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIFxuICAgIHZhciBidXR0b25Ub3AgPSBidXR0b25SZWN0LnRvcDtcbiAgICB2YXIgYnV0dG9uTGVmdCA9IGJ1dHRvblJlY3QubGVmdDtcbiAgICBuZXdUYXNrRm9ybS5zdHlsZS50b3AgPSBidXR0b25Ub3AgKyAncHgnO1xuICAgIG5ld1Rhc2tGb3JtLnN0eWxlLmxlZnQgPSBidXR0b25MZWZ0ICsgJ3B4JztcblxuICAgIG5ld1Rhc2tGb3JtLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIG5ld1Rhc2tGb3JtLnN0eWxlLndpZHRoID0gZ2V0Q29tcHV0ZWRTdHlsZShuZXdUYXNrQnV0dG9uKS53aWR0aDtcbiAgICBuZXdUYXNrQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdXBkYXRlV2lkdGgpO1xuXG4gICAgZnVuY3Rpb24gdXBkYXRlV2lkdGgoKSB7XG4gICAgICAgIG5ld1Rhc2tCdXR0b24uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIG5ld1Rhc2tGb3JtLnN0eWxlLndpZHRoID0gZ2V0Q29tcHV0ZWRTdHlsZShuZXdUYXNrQnV0dG9uKS53aWR0aDtcbiAgICAgICAgbmV3VGFza0J1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIFxuICAgIH1cblxuICAgIG5ld1Rhc2tGb3JtLm9uc3VibWl0ID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnc3VibWl0IG5ldyB0YXNrIGNsaWNrZWQnKVxuICAgICAgICBhZGROZXdUYXNrKG5ld1Rhc2tCdXR0b24pOyAvL2NyZWF0ZSBuZXcgdGFzayBjYXJkXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9O1xuXG4gICAgY2FuY2VsVGFzay5vbmNsaWNrID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnY2FuY2VsIHRhc2sgY2xpY2tlZCcpXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgY2FuY2VsVGFza0NyZWF0aW9uKG5ld1Rhc2tCdXR0b24pO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gYWRkTmV3VGFzayhuZXdUYXNrQnV0dG9uKSB7XG4gICAgbGV0IG1haW5UYXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbWFpblRhc2tDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnbWFpblRhc2tDb250YWluZXInKTtcblxuICAgIGxldCBuZXdUYXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbmV3VGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCduZXdUYXNrJyk7XG5cblxuICAgIGxldCBjaGVjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgY2hlY2sudHlwZSA9IFwiY2hlY2tib3hcIjtcbiAgICBuZXdUYXNrQ29udGFpbmVyLmFwcGVuZChjaGVjayk7XG5cbiAgICBsZXQgbmV3VGFza0NvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBuZXdUYXNrQ29udGVudC5jbGFzc0xpc3QuYWRkKCduZXdUYXNrQ29udGVudCcpO1xuXG4gICAgbGV0IHRhc2tOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrTmFtZS50eXBlID0gJ3RleHQnO1xuICAgIHRhc2tOYW1lLnZhbHVlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tOYW1lJykudmFsdWU7XG4gICAgbmV3VGFza0NvbnRlbnQuYXBwZW5kKHRhc2tOYW1lKTtcblxuICAgIGxldCB0YXNrRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgdGFza0RhdGUudHlwZSA9ICdkYXRlJztcbiAgICB0YXNrRGF0ZS52YWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrRGF0ZScpLnZhbHVlO1xuICAgIG5ld1Rhc2tDb250ZW50LmFwcGVuZCh0YXNrRGF0ZSk7XG5cbiAgICBuZXdUYXNrQ29udGFpbmVyLmFwcGVuZChuZXdUYXNrQ29udGVudCk7XG5cbiAgICB0YXNrRGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IG5ld1Rhc2tEYXRlID0gbmV3IERhdGUodGFza0RhdGUudmFsdWUpO1xuICAgICAgICAvLyBVcGRhdGUgdGhlIHRhc2sgb2JqZWN0IHdpdGggdGhlIG5ldyB0YXNrIGRhdGVcbiAgICAgICAgdGFzay50YXNrRGF0ZSA9IG5ld1Rhc2tEYXRlO1xuICAgIH0pO1xuXG4gICAgbGV0IHN1YlRhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzdWJUYXNrQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3N1YlRhc2tDb250YWluZXInKTtcblxuICAgIGxldCB0YXNrID0ge1xuICAgICAgICBpZDogbXlUYXNrcy5sZW5ndGgsXG4gICAgICAgIG1haW5UYXNrRGl2OiBtYWluVGFza0NvbnRhaW5lcixcbiAgICAgICAgbmV3VGFza0RpdjogbmV3VGFza0NvbnRhaW5lcixcbiAgICAgICAgc3ViVGFza0Rpdjogc3ViVGFza0NvbnRhaW5lcixcbiAgICAgICAgdGFza0RhdGU6IGdldFRhc2tEYXRlKCksXG4gICAgICAgIHN1YlRhc2tzOiBbXVxuICAgIH1cblxuICAgIGRpc3BsYXlNZW51KHRhc2spO1xuICAgIG15VGFza3MucHVzaCh0YXNrKTtcblxuICAgIGNoZWNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoY2hlY2suY2hlY2tlZCkge1xuICAgICAgICAgIC8vIE1hcmsgdGFzayBhcyBjb21wbGV0ZWRcbiAgICAgICAgICBteVRhc2tzLnNwbGljZSh0YXNrLmlkLCAxKTtcbiAgICAgICAgICBsb2FkSW5ib3goKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhteVRhc2tzKTtcbiAgICAgICAgfSBcbiAgICB9KTtcblxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrTmFtZScpLnZhbHVlID0gXCJcIjtcbiAgICBuZXdUYXNrRm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIG5ld1Rhc2tCdXR0b24uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgbG9hZEluYm94KCk7XG4gICAgY29uc29sZS5sb2cobXlUYXNrcyk7XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRhc2tEYXRlKCkge1xuICAgIGxldCBkYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tEYXRlJykudmFsdWU7XG4gICAgbGV0IHRhc2tEYXRlID0gbmV3IERhdGUoZGF0ZSk7XG5cbiAgICAvLyBsZXQgZGF5ID0gdGFza0RhdGUuZ2V0RGF0ZSgpO1xuICAgIC8vIGxldCBtb250aCA9IHRhc2tEYXRlLmdldE1vbnRoKCkgKyAxOyAvLyBKYW51YXJ5IGlzIDAsIHNvIHdlIGFkZCAxXG4gICAgLy8gbGV0IHllYXIgPSB0YXNrRGF0ZS5nZXRGdWxsWWVhcigpO1xuICBcbiAgICAvLyB0YXNrRGF0ZSA9IGRheSArICctJyArIG1vbnRoICsgJy0nICsgeWVhcjtcbiAgICByZXR1cm4gdGFza0RhdGU7XG59XG5cbmZ1bmN0aW9uIGNhbmNlbFRhc2tDcmVhdGlvbihuZXdUYXNrQnV0dG9uKSB7XG4gICAgbmV3VGFza0J1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBuZXdUYXNrRm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xufVxuXG5leHBvcnQgeyBuZXdUYXNrIH07IiwiaW1wb3J0IHsgbXlUYXNrcywgdGFza0NvbnRhaW5lciwgY29udGVudEhlYWRlciwgdGFza0xpc3QgfSBmcm9tIFwiLi5cIjtcbmltcG9ydCB7IG5ld1Rhc2sgfSBmcm9tIFwiLi90YXNrcy90YXNrc1wiO1xuaW1wb3J0IHsgaGlnaExpZ2h0QnV0dG9uIH0gZnJvbSBcIi4vc2lkZUJhci5qc1wiO1xuXG5jb25zdCBsb2FkSW5ib3ggPSAoKSA9PiB7XG5cbiAgICBjb250ZW50SGVhZGVyLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBpbmJveEhlYWRlcigpO1xuICAgIHNob3dBbGxUYXNrcygpO1xufVxuXG5mdW5jdGlvbiBpbmJveEhlYWRlcigpIHtcblxuICAgIGxldCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpXG4gICAgaGVhZGVyLnRleHRDb250ZW50ID0gXCJJbmJveFwiO1xuICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKCdwYWdlSGVhZGVyJyk7XG5cbiAgICBjb250ZW50SGVhZGVyLmFwcGVuZChoZWFkZXIpO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93QWxsVGFza3MoKSB7XG4gICAgdGFza0xpc3QudGV4dENvbnRlbnQgPSBcIlwiO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBteVRhc2tzLmxlbmd0aDsgaSsrKVxuICAgIHtcbiAgICAgICAgbGV0IG1haW5UYXNrRGl2ID0gbXlUYXNrc1tpXS5tYWluVGFza0RpdjtcbiAgICAgICAgbGV0IG5ld1Rhc2tEaXYgPSBteVRhc2tzW2ldLm5ld1Rhc2tEaXY7XG4gICAgICAgIGxldCBzdWJUYXNrRGl2ID0gbXlUYXNrc1tpXS5zdWJUYXNrRGl2O1xuXG4gICAgICAgIG1haW5UYXNrRGl2LmFwcGVuZChuZXdUYXNrRGl2KTtcbiAgICAgICAgbWFpblRhc2tEaXYuYXBwZW5kKHN1YlRhc2tEaXYpO1xuICAgICAgICB0YXNrTGlzdC5hcHBlbmQobWFpblRhc2tEaXYpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKG15VGFza3NbaV0pO1xuICAgIH1cblxuICAgIGxldCBuZXdUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgbmV3VGFza0J1dHRvbi50ZXh0Q29udGVudCA9IFwibmV3IGJ1dHRvbiFcIjtcbiAgICBuZXdUYXNrQnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgbmV3VGFzayhuZXdUYXNrQnV0dG9uKTtcbiAgICB9O1xuICAgIFxuICAgIG5ld1Rhc2tCdXR0b24uY2xhc3NMaXN0LmFkZCgnbmV3VGFza0J1dHRvbicpO1xuICAgIHRhc2tMaXN0LmFwcGVuZChuZXdUYXNrQnV0dG9uKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbG9hZEluYm94OyIsImV4cG9ydCBmdW5jdGlvbiBoaWdoTGlnaHRCdXR0b24oKSB7XG5cbiAgICBsZXQgYnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zaWRlQmFyQnV0dG9uJyk7XG5cbiAgICBidXR0b25zLmZvckVhY2goYnV0dG9uID0+IHtcblxuICAgICAgICBidXR0b24ub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgICAgIGJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2lkZUJhckJ1dHRvbicpO1xuXG4gICAgICAgICAgICBidXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdoaWdobGlnaHQtYnV0dG9uJykpO1xuICAgICAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2hpZ2hsaWdodC1idXR0b24nKTtcbiAgICAgICAgfTtcbiAgICB9KTtcbn0iLCJpbXBvcnQgeyBteVByb2plY3RzLCBwcm9qZWN0Rm9ybSwgY2FuY2VsUHJvamVjdCwgcHJvamVjdENvbnRhaW5lciB9IGZyb20gXCIuLi8uLlwiO1xuaW1wb3J0IHsgbG9hZFByb2plY3QgfSBmcm9tIFwiLi9sb2FkUHJvamVjdFwiO1xuaW1wb3J0IHsgaGlnaExpZ2h0QnV0dG9uIH0gZnJvbSBcIi4uL3NpZGVCYXIuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dQcm9qZWN0Rm9ybSgpIHtcbiAgICBwcm9qZWN0Rm9ybS5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xuICAgIFxuICAgIHByb2plY3RGb3JtLm9uc3VibWl0ID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBjcmVhdGVOZXdQcm9qZWN0KCk7XG4gICAgICAgIHByb2plY3RGb3JtLnJlc2V0KCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9O1xuICAgIGNhbmNlbFByb2plY3Qub25jbGljayA9IGhpZGVQcm9qZWN0Rm9ybTtcbn1cblxuZnVuY3Rpb24gaGlkZVByb2plY3RGb3JtKGUpIHtcbiAgICBwcm9qZWN0Rm9ybS5yZXNldCgpO1xuICAgIHByb2plY3RGb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVOZXdQcm9qZWN0KCkge1xuICAgIGxldCBuZXdQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgbmV3UHJvamVjdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCduZXdQcm9qZWN0Jyk7XG4gICAgbmV3UHJvamVjdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdzaWRlQmFyQnV0dG9uJyk7XG5cbiAgICBsZXQgcHJvamVjdE5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdE5hbWUnKS52YWx1ZTtcbiAgICBuZXdQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG4gICAgXG4gICAgbGV0IG5ld1Byb2plY3QgPSB7XG4gICAgICAgIGlkOiBteVByb2plY3RzLmxlbmd0aCxcbiAgICAgICAgbmFtZTogcHJvamVjdE5hbWUsXG4gICAgICAgIHRhc2tzOiBbXVxuICAgIH1cblxuICAgIHByb2plY3RDb250YWluZXIuYXBwZW5kKG5ld1Byb2plY3RCdXR0b24pO1xuICAgIG15UHJvamVjdHMucHVzaChuZXdQcm9qZWN0KTtcblxuICAgIGhpZ2hMaWdodEJ1dHRvbigpO1xuXG4gICAgbmV3UHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICBsb2FkUHJvamVjdChuZXdQcm9qZWN0KTtcbiAgICB9KTtcbn1cblxuXG4iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcblxuaW1wb3J0IGxvYWRJbmJveCBmcm9tIFwiLi9tb2R1bGVzL2luYm94XCI7XG5pbXBvcnQgbG9hZFRvZGF5IGZyb20gXCIuL21vZHVsZXMvdG9kYXlcIjtcbmltcG9ydCBsb2FkV2VlayBmcm9tIFwiLi9tb2R1bGVzL3dlZWtcIjtcbmltcG9ydCB7IHNob3dQcm9qZWN0Rm9ybSwgaGlkZVByb2plY3RGb3JtLCBjcmVhdGVOZXdQcm9qZWN0IH0gZnJvbSAnLi9tb2R1bGVzL3Byb2plY3RzL2NyZWF0ZVByb2plY3QnO1xuaW1wb3J0IHsgaGlnaExpZ2h0QnV0dG9uIH0gZnJvbSAnLi9tb2R1bGVzL3NpZGVCYXIuanMnO1xuXG5jb25zdCBjb250ZW50SG9sZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnRlbnQnKTtcbmNvbnN0IGNvbnRlbnRIZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudEhlYWRlcicpO1xuXG5jb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tDb250YWluZXInKTtcbmNvbnN0IHRhc2tMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tMaXN0Jyk7XG5jb25zdCBwcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3RDb250YWluZXInKVxuXG5jb25zdCBuZXdUYXNrRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXdUYXNrRm9ybScpO1xuY29uc3Qgc3VibWl0TmV3VGFzayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXROZXdUYXNrJyk7XG5jb25zdCBjYW5jZWxUYXNrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbmNlbFRhc2snKTtcblxuY29uc3Qgc3ViVGFza0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3ViVGFza0Zvcm0nKTtcbmNvbnN0IHN1Ym1pdFN1YlRhc2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0U3ViVGFzaycpO1xuY29uc3QgY2FuY2VsU3ViVGFzayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW5jZWxTdWJUYXNrJyk7XG5cbmNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RGb3JtJyk7XG5cbmNvbnN0IGFkZFByb2plY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkUHJvamVjdCcpO1xuY29uc3QgY2FuY2VsUHJvamVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW5jZWxQcm9qZWN0Jyk7XG5jb25zdCBtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1c3RvbS1tZW51Jyk7XG5cblxuY29uc3QgbXlUYXNrcyA9IFtdO1xuY29uc3QgbXlQcm9qZWN0cyA9IFtdO1xuXG5sZXQgaW5ib3hCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5ib3gnKTtcbmluYm94QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbG9hZEluYm94KTtcblxubGV0IHRvZGF5QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvZGF5Jyk7XG50b2RheUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxvYWRUb2RheSk7XG5cbmxldCB3ZWVrbHlCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2VlaycpO1xud2Vla2x5QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbG9hZFdlZWspO1xuXG5sZXQgbmV3UHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXdQcm9qZWN0Jyk7XG5uZXdQcm9qZWN0QnV0dG9uLm9uY2xpY2sgPSBzaG93UHJvamVjdEZvcm07XG5cbmhpZ2hMaWdodEJ1dHRvbigpO1xuY29uc29sZS5sb2coXCJ3b3JrcyBsb2xcIik7XG5cbmV4cG9ydCB7IGNvbnRlbnRIb2xkZXIsIG15VGFza3MsIHRhc2tDb250YWluZXIsIHRhc2tMaXN0LCBjb250ZW50SGVhZGVyLCBuZXdUYXNrRm9ybSwgc3VibWl0TmV3VGFzaywgY2FuY2VsVGFzayxcbiAgICBteVByb2plY3RzLCBwcm9qZWN0Rm9ybSwgYWRkUHJvamVjdCwgY2FuY2VsUHJvamVjdCwgcHJvamVjdENvbnRhaW5lcixcbiAgICBzdWJUYXNrRm9ybSwgc3VibWl0U3ViVGFzaywgY2FuY2VsU3ViVGFzaywgbWVudSB9OyIsImltcG9ydCB7IGNvbnRlbnRIZWFkZXIsIG15VGFza3MsIHRhc2tMaXN0IH0gZnJvbSBcIi4uXCI7XG5cbmNvbnN0IGxvYWRUb2RheSA9ICgpID0+IHtcbiAgICB0YXNrTGlzdC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgY29udGVudEhlYWRlci50ZXh0Q29udGVudCA9IFwiXCI7XG5cbiAgICBsZXQgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKVxuICAgIGhlYWRlci50ZXh0Q29udGVudCA9IFwiVG9kYXlcIjtcbiAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZCgncGFnZUhlYWRlcicpO1xuXG4gICAgY29udGVudEhlYWRlci5hcHBlbmQoaGVhZGVyKTtcblxuICAgIGxldCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCk7XG5cbiAgICBjb25zb2xlLmxvZygndG9kYXlEYXRlIGlzICcgKyBjdXJyZW50RGF0ZSk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG15VGFza3MubGVuZ3RoOyBpKyspXG4gICAge1xuICAgICAgICBsZXQgdGFzayA9IG15VGFza3NbaV07XG4gICAgICAgIGxldCB0YXNrRGF0ZSA9IHRhc2sudGFza0RhdGU7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ3RoaXMgdGFzayBkYXRhLWRhdGUgaXMgJyArIHRhc2tEYXRlKVxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpID09PSB0YXNrRGF0ZS5nZXRGdWxsWWVhcigpICYmXG4gICAgICAgICAgICBjdXJyZW50RGF0ZS5nZXRNb250aCgpID09PSB0YXNrRGF0ZS5nZXRNb250aCgpICYmXG4gICAgICAgICAgICBjdXJyZW50RGF0ZS5nZXREYXRlKCkgPT09IHRhc2tEYXRlLmdldERhdGUoKVxuICAgICAgICApIHtcbiAgICAgICAgICAgIGxldCBtYWluVGFza0RpdiA9IHRhc2subWFpblRhc2tEaXY7XG4gICAgICAgICAgICBsZXQgbmV3VGFza0RpdiA9IHRhc2submV3VGFza0RpdjtcbiAgICAgICAgICAgIGxldCBzdWJUYXNrRGl2ID0gdGFzay5zdWJUYXNrRGl2O1xuICAgIFxuICAgICAgICAgICAgbWFpblRhc2tEaXYuYXBwZW5kKG5ld1Rhc2tEaXYpO1xuICAgICAgICAgICAgbWFpblRhc2tEaXYuYXBwZW5kKHN1YlRhc2tEaXYpO1xuICAgICAgICAgICAgdGFza0xpc3QuYXBwZW5kKG1haW5UYXNrRGl2KTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbG9hZFRvZGF5OyIsImltcG9ydCB7IGNvbnRlbnRIZWFkZXIsIG15VGFza3MsIHRhc2tMaXN0IH0gZnJvbSBcIi4uXCI7XG5cbmNvbnN0IGxvYWRXZWVrID0gKCkgPT4ge1xuICAgIHRhc2tMaXN0LnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBjb250ZW50SGVhZGVyLnRleHRDb250ZW50ID0gXCJcIjtcblxuICAgIGxldCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpXG4gICAgaGVhZGVyLnRleHRDb250ZW50ID0gXCJUaGlzIFdlZWtcIjtcbiAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZCgncGFnZUhlYWRlcicpO1xuXG4gICAgY29udGVudEhlYWRlci5hcHBlbmQoaGVhZGVyKTtcblxuICAgIGxldCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgbGV0IGN1cnJlbnREYXlPZldlZWsgPSBjdXJyZW50RGF0ZS5nZXREYXkoKTtcbiAgICBcbiAgICAvLyBDYWxjdWxhdGUgdGhlIHN0YXJ0IG9mIHRoZSB3ZWVrXG4gICAgbGV0IHN0YXJ0T2ZXZWVrID0gbmV3IERhdGUoY3VycmVudERhdGUpO1xuICAgIHN0YXJ0T2ZXZWVrLnNldERhdGUoY3VycmVudERhdGUuZ2V0RGF0ZSgpIC0gY3VycmVudERheU9mV2VlayArIDEpO1xuICAgIHN0YXJ0T2ZXZWVrLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgIFxuICAgIC8vIENhbGN1bGF0ZSB0aGUgZW5kIG9mIHRoZSB3ZWVrXG4gICAgbGV0IGVuZE9mV2VlayA9IG5ldyBEYXRlKGN1cnJlbnREYXRlKTtcbiAgICBlbmRPZldlZWsuc2V0RGF0ZShjdXJyZW50RGF0ZS5nZXREYXRlKCkgKyAoNiAtIGN1cnJlbnREYXlPZldlZWspICsgMSk7XG4gICAgZW5kT2ZXZWVrLnNldEhvdXJzKDIzLCA1OSwgNTksIDk5OSk7XG5cbiAgICBjb25zb2xlLmxvZygndG9kYXlEYXRlIGlzICcgKyBjdXJyZW50RGF0ZSk7XG4gICAgY29uc29sZS5sb2coJ3dlZWsgc3RhcnQgaXMgJyArIHN0YXJ0T2ZXZWVrICsgJyBhbmQgd2VlayBlbmQgaXMgJyArIGVuZE9mV2Vlayk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG15VGFza3MubGVuZ3RoOyBpKyspXG4gICAge1xuICAgICAgICBsZXQgdGFzayA9IG15VGFza3NbaV07XG4gICAgICAgIGxldCB0YXNrRGF0ZSA9IHRhc2sudGFza0RhdGU7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0aGlzIHRhc2sgZGF0YS1kYXRlIGlzICcgKyB0YXNrRGF0ZSApXG5cbiAgICAgICAgaWYgKHRhc2tEYXRlID49IHN0YXJ0T2ZXZWVrICYmIHRhc2tEYXRlIDw9IGVuZE9mV2VlaylcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IG1haW5UYXNrRGl2ID0gdGFzay5tYWluVGFza0RpdjtcbiAgICAgICAgICAgIGxldCBuZXdUYXNrRGl2ID0gdGFzay5uZXdUYXNrRGl2O1xuICAgICAgICAgICAgbGV0IHN1YlRhc2tEaXYgPSB0YXNrLnN1YlRhc2tEaXY7XG4gICAgXG4gICAgICAgICAgICBtYWluVGFza0Rpdi5hcHBlbmQobmV3VGFza0Rpdik7XG4gICAgICAgICAgICBtYWluVGFza0Rpdi5hcHBlbmQoc3ViVGFza0Rpdik7XG4gICAgICAgICAgICB0YXNrTGlzdC5hcHBlbmQobWFpblRhc2tEaXYpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBsb2FkV2VlazsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwibG9jYWxzIiwic2hvd1Byb2plY3RUYXNrcyIsIm5ld1Byb2plY3QiLCJ0YXNrTGlzdCIsInRleHRDb250ZW50IiwidGFza3MiLCJwcm9qZWN0VGFza3MiLCJtYWluVGFza0RpdiIsIm5ld1Rhc2tEaXYiLCJzdWJUYXNrRGl2IiwiYXBwZW5kIiwibmV3UHJvamVjdFRhc2tCdXR0b24iLCJvbmNsaWNrIiwiYnV0dG9uUmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImJ1dHRvblRvcCIsInRvcCIsImJ1dHRvbkxlZnQiLCJsZWZ0IiwibmV3VGFza0Zvcm0iLCJkaXNwbGF5Iiwid2lkdGgiLCJnZXRDb21wdXRlZFN0eWxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uc3VibWl0IiwiY29uc29sZSIsImxvZyIsIm1haW5UYXNrQ29udGFpbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwibmV3VGFza0NvbnRhaW5lciIsInN1YlRhc2tDb250YWluZXIiLCJjaGVjayIsInR5cGUiLCJuZXdUYXNrQ29udGVudCIsInRhc2tOYW1lIiwidmFsdWUiLCJnZXRFbGVtZW50QnlJZCIsInRhc2tEYXRlIiwicHJvamVjdFRhc2siLCJnZXRUYXNrRGF0ZSIsInN1YlRhc2tzIiwibmV3VGFza0RhdGUiLCJEYXRlIiwiY2hlY2tlZCIsInByb2plY3RJZCIsInRhc2tJbmRleCIsImluZGV4T2YiLCJteVByb2plY3RzIiwiZGlzcGxheU1lbnUiLCJhZGROZXdQcm9qZWN0VGFzayIsInJlc2V0IiwicHJldmVudERlZmF1bHQiLCJjYW5jZWxUYXNrIiwidmlzaWJpbGl0eSIsIm5ld1Byb2plY3RUYXNrIiwidGFzayIsIm1lbnUiLCJwYWdlWCIsInBhZ2VZIiwibWVudUl0ZW0xIiwibWVudUl0ZW0yIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50Iiwic3ViVGFza0Zvcm0iLCJuZXdTdWJUYXNrIiwibXlUYXNrcyIsImFkZE5ld1N1YlRhc2siLCJjYW5jZWxTdWJUYXNrIiwiaW5jbHVkZXMiLCJ0YXNrSUQiLCJwYXJlbnRQcm9qZWN0IiwiZmluZCIsInByb2plY3QiLCJib2R5IiwiZGF0ZSIsImNvbnRlbnRIZWFkZXIiLCJoZWFkZXIiLCJpbmJveEhlYWRlciIsIm5ld1Rhc2tCdXR0b24iLCJhZGROZXdUYXNrIiwiY2FuY2VsVGFza0NyZWF0aW9uIiwibmV3VGFzayIsInNob3dBbGxUYXNrcyIsImhpZ2hMaWdodEJ1dHRvbiIsImJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImJ1dHRvbiIsImhpZGVQcm9qZWN0Rm9ybSIsInByb2plY3RGb3JtIiwicHJvamVjdENvbnRhaW5lciIsImNhbmNlbFByb2plY3QiLCJjdXJyZW50RGF0ZSIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiY3VycmVudERheU9mV2VlayIsImdldERheSIsInN0YXJ0T2ZXZWVrIiwic2V0RGF0ZSIsInNldEhvdXJzIiwiZW5kT2ZXZWVrIiwibmV3UHJvamVjdEJ1dHRvbiIsInByb2plY3ROYW1lIiwibmFtZSIsInByb2plY3RIZWFkZXIiLCJsb2FkUHJvamVjdCIsImNyZWF0ZU5ld1Byb2plY3QiXSwic291cmNlUm9vdCI6IiJ9