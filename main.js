(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var a=t(537),o=t.n(a),i=t(645),s=t.n(i)()(o());s.push([n.id,"* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: grey;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: rgb(138, 138, 138);\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 250px;\n    padding: 20px;\n    gap: 20px;\n    background-color: rgb(48, 48, 48);\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button {\n    padding: 8px;\n}\n\n.highlight-button {\n    background-color: red;\n}\n\n#content {\n    width: calc(100vw - 250px);\n    height: calc(100vh - 55px);\n    margin-left: 250px;\n    background-color: rgb(163, 163, 163);\n\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: flex;\n    min-height: 50px;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.mainTaskContainer {\n    width: 100%\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 35px;\n    width: 100%;\n    background-color: rgb(219, 218, 218);\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.newTaskForm {\n    display: none;\n    position: absolute;\n    height: 50px;\n    border: 1px solid black;\n}\n\n.newTaskForm h1 {\n    margin-top: 0px;\n}\n\n\n\n\n\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    border: 1px solid black;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    border: 1px solid red;\n    background-color: red;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.subTaskContainer .subTaskDone {\n    background-color: aquamarine;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid red;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n.projectButtons {\n    display: flex;\n}\n\n.projectButtons button {\n    flex: 1;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;;IAEX,sBAAsB;;IAEtB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,kBAAkB;IAClB,qGAAqG;AACzG;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,eAAe;IACf,0BAA0B;IAC1B,YAAY;IACZ,aAAa;IACb,SAAS;IACT,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,0BAA0B;IAC1B,0BAA0B;IAC1B,kBAAkB;IAClB,oCAAoC;;IAEpC,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,sBAAsB;IACtB,qGAAqG;AACzG;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI;AACJ;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,WAAW;IACX,oCAAoC;IACpC,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,WAAW;IACX,8BAA8B;AAClC;;AAEA;IACI,2BAA2B;IAC3B,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,eAAe;AACnB;;;;;;;AAOA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,qBAAqB;AACzB;;AAEA;IACI,2BAA2B;IAC3B,YAAY;AAChB;;AAEA;IACI,4BAA4B;AAChC;;;;;;AAMA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,iBAAiB;IACjB,yBAAyB;IACzB,4BAA4B;IAC5B,6BAA6B;AACjC;;;AAGA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,YAAY;AAChB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;AACrB;;;;AAIA;IACI,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: grey;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: rgb(138, 138, 138);\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 250px;\n    padding: 20px;\n    gap: 20px;\n    background-color: rgb(48, 48, 48);\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button {\n    padding: 8px;\n}\n\n.highlight-button {\n    background-color: red;\n}\n\n#content {\n    width: calc(100vw - 250px);\n    height: calc(100vh - 55px);\n    margin-left: 250px;\n    background-color: rgb(163, 163, 163);\n\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: flex;\n    min-height: 50px;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.mainTaskContainer {\n    width: 100%\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 35px;\n    width: 100%;\n    background-color: rgb(219, 218, 218);\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.newTaskForm {\n    display: none;\n    position: absolute;\n    height: 50px;\n    border: 1px solid black;\n}\n\n.newTaskForm h1 {\n    margin-top: 0px;\n}\n\n\n\n\n\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    border: 1px solid black;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    border: 1px solid red;\n    background-color: red;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n}\n\n.subTaskContainer .subTaskDone {\n    background-color: aquamarine;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid red;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n.projectButtons {\n    display: flex;\n}\n\n.projectButtons button {\n    flex: 1;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}"],sourceRoot:""}]);const l=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(a)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(s[c]=!0)}for(var r=0;r<n.length;r++){var d=[].concat(n[r]);a&&s[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var i={},s=[],l=0;l<n.length;l++){var c=n[l],r=a.base?c[0]+a.base:c[0],d=i[r]||0,A="".concat(r," ").concat(d);i[r]=d+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,a);a.byIndex=l,e.splice(l,0,{identifier:A,updater:f,references:1})}s.push(A)}return s}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=a(n=n||[],o=o||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var l=t(i[s]);e[l].references--}for(var c=a(n,o),r=0;r<i.length;r++){var d=t(i[r]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var i=e[a]={id:a,exports:{}};return n[a](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var a={};(()=>{t.d(a,{nf:()=>L,j0:()=>D,el:()=>E,tJ:()=>I,GI:()=>j,kv:()=>q,dT:()=>Y,X1:()=>w,Ts:()=>v,K9:()=>S,z2:()=>T,ot:()=>h});var n=t(379),e=t.n(n),o=t(795),i=t.n(o),s=t(569),l=t.n(s),c=t(565),r=t.n(c),d=t(216),A=t.n(d),u=t(589),p=t.n(u),f=t(426),m={};m.styleTagTransform=p(),m.setAttributes=r(),m.insert=l().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=A(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const g=n=>{h.textContent="",I.textContent="",function(n){I.textContent="";let e=document.createElement("h1");e.textContent=n.name,e.classList.add("pageHeader"),I.append(e);let t=document.createElement("button");t.textContent="new button!",t.onclick=function(){!function(n,e){var t=n.getBoundingClientRect(),a=t.top,o=t.left;w.style.top=a+"px",w.style.left=o+"px",w.style.display="block",w.style.width=getComputedStyle(n).width,n.style.visibility="hidden",window.addEventListener("resize",(function(){w.style.width=getComputedStyle(n).width})),w.onsubmit=function(t){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let a=document.createElement("div");a.classList.add("subTaskContainer");let o=document.createElement("input");o.type="checkbox",t.append(o);let i=document.createElement("div");i.classList.add("newTaskContent");let s=document.createElement("input");s.type="text",s.value=document.getElementById("taskName").value,i.append(s);let l=document.createElement("input");l.type="date",l.value=document.getElementById("taskDate").value,i.append(l),t.append(i);let c={id:n.tasks.length,taskDate:B(),subTasks:[],mainTaskDiv:e,newTaskDiv:t,subTaskDiv:a};l.addEventListener("change",(function(){let n=new Date(l.value);c.taskDate=n})),o.addEventListener("change",(function(){if(o.checked){let e=n.id,t=n.tasks.indexOf(c);t>-1&&q[e].tasks.splice(t,1),C(n)}})),b(c),n.tasks.push(c),C(n)}(e),n.style.visibility="visible",w.reset(),w.style.display="none",t.preventDefault()},E.onclick=function(e){console.log("cancel task clicked"),n.style.visibility="visible",w.reset(),w.style.display="none",e.preventDefault()}}(t,n)},t.classList.add("newTaskButton"),I.append(t)}(n),C(n)};function C(n){h.textContent="";for(let e=0;e<n.tasks.length;e++){let t=n.tasks[e],a=t.mainTaskDiv,o=t.newTaskDiv,i=t.subTaskDiv;a.append(o),a.append(i),h.append(a)}}function b(n){n.newTaskDiv.addEventListener("contextmenu",(function(e){e.preventDefault(),j.style.display="block",j.style.left=`${e.pageX}px`,j.style.top=`${e.pageY}px`;const t=j.querySelector("#menu-item-1"),a=j.querySelector("#menu-item-2");t.onclick=function(){(function(n){n.subTaskDiv.insertAdjacentElement("afterend",T),T.style.display="block",T.onsubmit=function(e){console.log("submit subtask clicked"),function(n){let e=document.createElement("div");e.classList.add("subTask");let t=document.createElement("input");t.type="checkbox",e.append(t);let a=document.createElement("input");a.type="text",a.value=document.getElementById("subTaskName").value,e.append(a),e.setAttribute("data-index",n.subTasks.length),n.subTasks.push(e),n.subTaskDiv.append(e),t.addEventListener("change",(function(){t.checked?(e.classList.add("subTaskDone"),console.log(Y)):e.classList.remove("subTaskDone")})),T.reset(),T.style.display="none",console.log(n.subTasks)}(n),e.preventDefault()},D.onclick=function(n){console.log("cancel task clicked"),n.preventDefault()}})(n),j.style.display="none"},a.onclick=function(){if(Y.includes(n))Y.splice(n.id,1),x();else{let e=n.id,t=q.find((e=>e.tasks&&e.tasks.includes(n)));e>-1&&q[t.id].tasks.splice(e,1),C(t)}j.style.display="none"},document.body.appendChild(j)}))}function B(){let n=document.getElementById("taskDate").value;return new Date(n)}const x=()=>{I.textContent="",function(){let n=document.createElement("h1");n.textContent="inbox",n.classList.add("pageHeader"),I.append(n);let e=document.createElement("button");e.textContent="new button!",e.onclick=function(){!function(n){var e=n.getBoundingClientRect(),t=e.top,a=e.left;w.style.top=t+"px",w.style.left=a+"px",w.style.display="block",w.style.width=getComputedStyle(n).width,n.style.visibility="hidden",window.addEventListener("resize",(function(){w.style.width=getComputedStyle(n).width})),w.onsubmit=function(e){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let a=document.createElement("input");a.type="checkbox",t.append(a);let o=document.createElement("div");o.classList.add("newTaskContent");let i=document.createElement("input");i.type="text",i.value=document.getElementById("taskName").value,o.append(i);let s=document.createElement("input");s.type="date",s.value=document.getElementById("taskDate").value,o.append(s),t.append(o),s.addEventListener("change",(function(){let n=new Date(s.value);c.taskDate=n}));let l=document.createElement("div");l.classList.add("subTaskContainer");let c={id:Y.length,mainTaskDiv:e,newTaskDiv:t,subTaskDiv:l,taskDate:B(),subTasks:[]};b(c),Y.push(c),a.addEventListener("change",(function(){a.checked&&(Y.splice(c.id,1),x(),console.log(Y))})),document.getElementById("taskName").value="",w.style.display="none",n.style.visibility="visible",x(),console.log(Y)}(n),e.preventDefault()},E.onclick=function(e){console.log("cancel task clicked"),e.preventDefault(),function(n){n.style.visibility="visible",w.style.display="none"}(n)}}(e)},e.classList.add("newTaskButton"),I.append(e)}(),function(){h.textContent="";for(let n=0;n<Y.length;n++){let e=Y[n].mainTaskDiv,t=Y[n].newTaskDiv,a=Y[n].subTaskDiv;e.append(t),e.append(a),h.append(e),console.log(Y[n])}}()};function k(){let n=document.querySelectorAll(".sideBarButton");n.forEach((e=>{e.onclick=()=>{n=document.querySelectorAll(".sideBarButton"),n.forEach((n=>n.classList.remove("highlight-button"))),e.classList.add("highlight-button")}}))}function y(n){S.reset(),S.style.display="none",n.preventDefault()}document.querySelector("#content");const I=document.querySelector(".contentHeader"),h=(document.querySelector(".taskContainer"),document.querySelector(".taskList")),v=document.getElementById("projectContainer"),w=document.querySelector(".newTaskForm"),E=(document.getElementById("submitNewTask"),document.getElementById("cancelTask")),T=document.querySelector(".subTaskForm"),D=(document.getElementById("submitSubTask"),document.getElementById("cancelSubTask")),S=document.querySelector(".projectForm"),L=(document.getElementById("addProject"),document.getElementById("cancelProject")),j=document.getElementById("custom-menu"),Y=[],q=[];document.querySelector(".inbox").addEventListener("click",x),document.querySelector(".today").addEventListener("click",(()=>{h.textContent="",I.textContent="";let n=document.createElement("h1");n.textContent="today",n.classList.add("pageHeader"),I.append(n);let e=new Date;console.log("todayDate is "+e);for(let n=0;n<Y.length;n++){let t=Y[n],a=t.taskDate;if(console.log("this task data-date is "+a),e.getFullYear()===a.getFullYear()&&e.getMonth()===a.getMonth()&&e.getDate()===a.getDate()){let n=t.mainTaskDiv,e=t.newTaskDiv,a=t.subTaskDiv;n.append(e),n.append(a),h.append(n)}}})),document.querySelector(".week").addEventListener("click",(()=>{h.textContent="",I.textContent="";let n=document.createElement("h1");n.textContent="this week",n.classList.add("pageHeader"),I.append(n);let e=new Date,t=e.getDay(),a=new Date(e);a.setDate(e.getDate()-t+1),a.setHours(0,0,0,0);let o=new Date(e);o.setDate(e.getDate()+(6-t)+1),o.setHours(23,59,59,999),console.log("todayDate is "+e),console.log("week start is "+a+" and week end is "+o);for(let n=0;n<Y.length;n++){let e=Y[n],t=e.taskDate;if(console.log("this task data-date is "+t),t>=a&&t<=o){let n=e.mainTaskDiv,t=e.newTaskDiv,a=e.subTaskDiv;n.append(t),n.append(a),h.append(n)}}})),document.querySelector(".newProject").onclick=function(){S.style.display="flex",S.onsubmit=function(n){!function(){let n=document.createElement("button");n.classList.add("newProject"),n.classList.add("sideBarButton");let e=document.getElementById("projectName").value;n.textContent=e;let t={id:q.length,name:e,tasks:[]};v.append(n),q.push(t),k(),n.addEventListener("click",(function(){g(t)}))}(),S.reset(),n.preventDefault()},L.onclick=y},k(),console.log("works lol")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,