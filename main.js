(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),a=t.n(o),i=t(645),A=t.n(i)()(a());A.push([n.id,"* {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 25vw;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button, #projectContainer button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover, #projectContainer button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button, #projectContainer .highlight-button  {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover, #projectContainer .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 25vw);\n\n    color: white;\n    margin-left: 25vw;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    border-bottom: 1px solid white;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%;\n    border-top: 2px solid white;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 40px;\n    width: 100%;\n    background-color: #d4d4d812;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n    padding-left: 15px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.newTask input[type=checkbox] {\n    margin-left: 10px;\n    width: 20px;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n    background-color: #d4d4d812;\n}\n\n.formElement {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n}\n\n.formElement input[type=text] {\n    height: 40px;\n    width: 70%;\n}\n\n.formElement input[type=date] {\n    height: 40px;\n    width: 30%;\n}\n\n.formElement button {\n    height: 25px;\n    width: 50%;\n}\n \n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n}\n\n.subTaskForm .subTaskFormContainer {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    margin-left: 35px;\n    color: white;\n}\n\n.subTaskFormContainer input[type=text] {\n    width: 60%;\n}\n\n.subTaskFormContainer button {\n    width: 20%;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-left: 35px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    background-color: #d4d4d812;\n    border-top: 1px solid #ffffff75;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 15px;\n    font-family: 'Open Sans';\n}\n\n.subTask input[type=checkbox] {\n    margin-left: 10px;\n    margin-right: 20px;\n    width: 15px;\n}\n\n.subTaskContainer .subTaskDone input {\n    text-decoration: line-through;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["* {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 25vw;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button, #projectContainer button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover, #projectContainer button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button, #projectContainer .highlight-button  {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover, #projectContainer .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 25vw);\n\n    color: white;\n    margin-left: 25vw;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    border-bottom: 1px solid white;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%;\n    border-top: 2px solid white;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 40px;\n    width: 100%;\n    background-color: #d4d4d812;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n    padding-left: 15px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.newTask input[type=checkbox] {\n    margin-left: 10px;\n    width: 20px;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n    background-color: #d4d4d812;\n}\n\n.formElement {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n}\n\n.formElement input[type=text] {\n    height: 40px;\n    width: 70%;\n}\n\n.formElement input[type=date] {\n    height: 40px;\n    width: 30%;\n}\n\n.formElement button {\n    height: 25px;\n    width: 50%;\n}\n \n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n}\n\n.subTaskForm .subTaskFormContainer {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    margin-left: 35px;\n    color: white;\n}\n\n.subTaskFormContainer input[type=text] {\n    width: 60%;\n}\n\n.subTaskFormContainer button {\n    width: 20%;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-left: 35px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    background-color: #d4d4d812;\n    border-top: 1px solid #ffffff75;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 15px;\n    font-family: 'Open Sans';\n}\n\n.subTask input[type=checkbox] {\n    margin-left: 10px;\n    margin-right: 20px;\n    width: 15px;\n}\n\n.subTaskContainer .subTaskDone input {\n    text-decoration: line-through;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}"],sourceRoot:""}]);const s=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(A[l]=!0)}for(var r=0;r<n.length;r++){var d=[].concat(n[r]);o&&A[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],s=0;s<n.length;s++){var l=n[s],r=o.base?l[0]+o.base:l[0],d=i[r]||0,c="".concat(r," ").concat(d);i[r]=d+1;var p=t(c),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=a(u,o);o.byIndex=s,e.splice(s,0,{identifier:c,updater:f,references:1})}A.push(c)}return A}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var s=t(i[A]);e[s].references--}for(var l=o(n,a),r=0;r<i.length;r++){var d=t(i[r]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=l}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{nf:()=>Y,j0:()=>S,el:()=>T,tJ:()=>y,GI:()=>L,kv:()=>F,dT:()=>j,MT:()=>I,X1:()=>w,Ts:()=>v,K9:()=>D,z2:()=>E,ot:()=>k});var n=t(379),e=t.n(n),a=t(795),i=t.n(a),A=t(569),s=t.n(A),l=t(565),r=t.n(l),d=t(216),c=t.n(d),p=t(589),u=t.n(p),f=t(426),m={};m.styleTagTransform=u(),m.setAttributes=r(),m.insert=s().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=c(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;function C(n){I.textContent="",k.textContent="";for(let e=0;e<n.tasks.length;e++){let t=n.tasks[e],o=t.mainTaskDiv,a=t.newTaskDiv,i=t.subTaskDiv;o.append(a),o.append(i),k.append(o)}let e=document.createElement("button");e.textContent="new button!",e.onclick=function(){!function(n,e){var t=n.getBoundingClientRect(),o=t.top,a=t.left;w.style.top=o+"px",w.style.left=a+"px",w.style.display="block",w.style.width=getComputedStyle(n).width,n.style.display="none",window.addEventListener("resize",(function(){n.style.display="block",w.style.width=getComputedStyle(n).width,n.style.display="none"})),w.onsubmit=function(t){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let o=document.createElement("div");o.classList.add("subTaskContainer");let a=document.createElement("input");a.type="checkbox",t.append(a);let i=document.createElement("div");i.classList.add("newTaskContent");let A=document.createElement("input");A.type="text",A.value=document.getElementById("taskName").value,i.append(A);let s=document.createElement("input");s.type="date",s.value=document.getElementById("taskDate").value,i.append(s),t.append(i);let l={id:n.tasks.length,taskDate:B(),subTasks:[],mainTaskDiv:e,newTaskDiv:t,subTaskDiv:o};s.addEventListener("change",(function(){let n=new Date(s.value);l.taskDate=n})),a.addEventListener("change",(function(){if(a.checked){let e=n.id,t=n.tasks.indexOf(l);t>-1&&F[e].tasks.splice(t,1),C(n)}})),b(l),n.tasks.push(l),C(n)}(e),n.style.display="block",w.reset(),w.style.display="none",t.preventDefault()},T.onclick=function(e){console.log("cancel task clicked"),n.style.visibility="visible",w.reset(),w.style.display="none",e.preventDefault()}}(e,n)},e.classList.add("newTaskButton"),I.append(e)}function b(n){n.newTaskDiv.addEventListener("contextmenu",(function(e){e.preventDefault(),L.style.display="block",L.style.left=`${e.pageX}px`,L.style.top=`${e.pageY}px`;const t=L.querySelector("#menu-item-1"),o=L.querySelector("#menu-item-2");t.onclick=function(){(function(n){n.subTaskDiv.insertAdjacentElement("afterend",E),E.style.display="block",E.onsubmit=function(e){console.log("submit subtask clicked"),function(n){let e=document.createElement("div");e.classList.add("subTask");let t=document.createElement("input");t.type="checkbox",e.append(t);let o=document.createElement("input");o.type="text",o.value=document.getElementById("subTaskName").value,e.append(o),e.setAttribute("data-index",n.subTasks.length),n.subTasks.push(e),n.subTaskDiv.append(e),t.addEventListener("change",(function(){t.checked?(e.classList.add("subTaskDone"),console.log(j)):e.classList.remove("subTaskDone")})),E.reset(),E.style.display="none",console.log(n.subTasks)}(n),e.preventDefault()},S.onclick=function(n){console.log("cancel task clicked"),n.preventDefault()}})(n),L.style.display="none"},o.onclick=function(){if(j.includes(n))j.splice(n.id,1),g();else{let e=n.id,t=F.find((e=>e.tasks&&e.tasks.includes(n)));e>-1&&F[t.id].tasks.splice(e,1),C(t)}L.style.display="none"},document.body.appendChild(L)}))}function B(){let n=document.getElementById("taskDate").value;return new Date(n)}const g=()=>{w.reset(),w.style.display="none",E.reset(),E.style.display="none",y.style.display="flex",y.textContent="",function(){let n=document.createElement("h1");n.textContent="Inbox",n.classList.add("pageHeader"),y.append(n)}(),function(){I.textContent="",k.textContent="";for(let n=0;n<j.length;n++){let e=j[n].mainTaskDiv,t=j[n].newTaskDiv,o=j[n].subTaskDiv;e.append(t),e.append(o),k.append(e),console.log(j[n])}let n=document.createElement("button");n.textContent="new button!",n.onclick=function(){!function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left;w.style.top=t+"px",w.style.left=o+"px",w.style.display="block",w.style.width=getComputedStyle(n).width,n.style.display="none",window.addEventListener("resize",(function(){n.style.display="block",w.style.width=getComputedStyle(n).width,n.style.display="none"})),w.onsubmit=function(e){console.log("submit new task clicked"),function(n){let e=document.createElement("div");e.classList.add("mainTaskContainer");let t=document.createElement("div");t.classList.add("newTask");let o=document.createElement("input");o.type="checkbox",t.append(o);let a=document.createElement("div");a.classList.add("newTaskContent");let i=document.createElement("input");i.type="text",i.value=document.getElementById("taskName").value,a.append(i);let A=document.createElement("input");A.type="date",A.value=document.getElementById("taskDate").value,a.append(A),t.append(a),A.addEventListener("change",(function(){let n=new Date(A.value);l.taskDate=n}));let s=document.createElement("div");s.classList.add("subTaskContainer");let l={id:j.length,mainTaskDiv:e,newTaskDiv:t,subTaskDiv:s,taskDate:B(),subTasks:[]};b(l),j.push(l),o.addEventListener("change",(function(){o.checked&&(j.splice(l.id,1),g(),console.log(j))})),document.getElementById("taskName").value="",w.style.display="none",n.style.display="block",g(),console.log(j)}(n),e.preventDefault()},T.onclick=function(e){console.log("cancel task clicked"),e.preventDefault(),function(n){n.style.display="block",w.style.display="none"}(n)}}(n)},n.classList.add("newTaskButton"),I.append(n)}()};function h(){let n=document.querySelectorAll(".sideBarButton");n.forEach((e=>{e.onclick=()=>{n=document.querySelectorAll(".sideBarButton"),n.forEach((n=>n.classList.remove("highlight-button"))),e.classList.add("highlight-button")}}))}function x(n){D.reset(),D.style.display="none",n.preventDefault()}document.querySelector("#content");const y=document.querySelector(".contentHeader"),I=(document.querySelector(".taskContainer"),document.querySelector(".newTaskButtonContainer")),k=document.querySelector(".taskList"),v=document.getElementById("projectContainer"),w=document.querySelector(".newTaskForm"),T=(document.getElementById("submitNewTask"),document.getElementById("cancelTask")),E=document.querySelector(".subTaskForm"),S=(document.getElementById("submitSubTask"),document.getElementById("cancelSubTask")),D=document.querySelector(".projectForm"),Y=(document.getElementById("addProject"),document.getElementById("cancelProject")),L=document.getElementById("custom-menu"),j=[],F=[];document.querySelector(".inbox").addEventListener("click",g),document.querySelector(".today").addEventListener("click",(()=>{w.reset(),w.style.display="none",E.reset(),E.style.display="none",k.textContent="",y.style.display="flex",y.textContent="";let n=document.createElement("h1");n.textContent="Today",n.classList.add("pageHeader"),y.append(n);let e=new Date;console.log("todayDate is "+e);for(let n=0;n<j.length;n++){let t=j[n],o=t.taskDate;if(console.log("this task data-date is "+o),e.getFullYear()===o.getFullYear()&&e.getMonth()===o.getMonth()&&e.getDate()===o.getDate()){let n=t.mainTaskDiv,e=t.newTaskDiv,o=t.subTaskDiv;n.append(e),n.append(o),k.append(n)}}})),document.querySelector(".week").addEventListener("click",(()=>{w.reset(),w.style.display="none",E.reset(),E.style.display="none",k.textContent="",y.style.display="flex",y.textContent="";let n=document.createElement("h1");n.textContent="This Week",n.classList.add("pageHeader"),y.append(n);let e=new Date,t=e.getDay(),o=new Date(e);o.setDate(e.getDate()-t+1),o.setHours(0,0,0,0);let a=new Date(e);a.setDate(e.getDate()+(6-t)+1),a.setHours(23,59,59,999),console.log("todayDate is "+e),console.log("week start is "+o+" and week end is "+a);for(let n=0;n<j.length;n++){let e=j[n],t=e.taskDate;if(console.log("this task data-date is "+t),t>=o&&t<=a){let n=e.mainTaskDiv,t=e.newTaskDiv,o=e.subTaskDiv;n.append(t),n.append(o),k.append(n)}}})),document.querySelector(".newProject").onclick=function(){D.style.display="flex",D.onsubmit=function(n){!function(){let n=document.createElement("button");n.classList.add("newProject"),n.classList.add("sideBarButton");let e=document.getElementById("projectName").value;n.textContent=e;let t={id:F.length,name:e,tasks:[]};v.append(n),F.push(t),h(),n.addEventListener("click",(function(){(n=>{w.reset(),w.style.display="none",E.reset(),E.style.display="none",k.textContent="",y.style.display="flex",y.textContent="",function(n){y.textContent="";let e=document.createElement("h1");e.textContent=n.name,e.classList.add("pageHeader"),y.append(e)}(n),C(n)})(t)}))}(),D.reset(),n.preventDefault()},Y.onclick=x},h(),console.log("works lol")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,