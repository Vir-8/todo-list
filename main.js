(()=>{"use strict";var n={602:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(537),a=t.n(o),i=t(645),s=t.n(i)()(a());s.push([n.id,"* {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 25vw;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button, #projectContainer button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover, #projectContainer button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button, #projectContainer .highlight-button  {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover, #projectContainer .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 25vw);\n\n    color: white;\n    margin-left: 25vw;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    border-bottom: 1px solid white;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%;\n    border-top: 2px solid white;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 40px;\n    width: 100%;\n    background-color: #d4d4d812;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n    padding-left: 15px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.newTask input[type=checkbox] {\n    margin-left: 10px;\n    width: 20px;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n    background-color: #d4d4d812;\n}\n\n.formElement {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n}\n\n.formElement input {\n    height: 40px;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.formElement input[type=text] {\n    width: 70%;\n}\n\n.formElement input[type=date] {\n    width: 30%;\n}\n\n.formElement button {\n    height: 25px;\n    width: 50%;\n}\n \n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n}\n\n.subTaskForm .subTaskFormContainer {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    margin-left: 35px;\n    color: white;\n}\n\n.subTaskFormContainer input[type=text] {\n    width: 60%;\n    font-size: 15px;\n}\n\n.subTaskFormContainer button {\n    width: 20%;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-left: 35px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    background-color: #d4d4d812;\n    border-top: 1px solid #ffffff75;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 15px;\n    font-family: 'Open Sans';\n}\n\n.subTask input[type=checkbox] {\n    margin-left: 10px;\n    margin-right: 20px;\n    width: 15px;\n}\n\n.subTaskContainer .subTaskDone input {\n    text-decoration: line-through;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["* {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n\n    background-color: #1f2937;\n\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    display: flex;\n    height: 55px;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #111827; \n    color: white;\n}\n\n#header h1 {\n    align-self: center;\n    margin: 0;\n    margin-left: 100px;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n#container {\n    display: flex;\n    position: relative;\n    top: 55px;\n}\n\n#sideBar {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: fixed;\n    height: calc(100vh - 55px);\n    width: 25vw;\n    padding: 20px;\n    gap: 20px;\n    background-color: #030712;\n}\n\n#sideBar .buttons {\n    display: flex;\n    flex-direction: column;\n    margin-top: 15px;\n}\n\n#sideBar .buttons button, #projectContainer button {\n    background-color: #1f293757;\n    padding: 8px;\n    text-align: left;\n    border: none;\n    outline: none;\n    color: white;\n}\n\n#sideBar .buttons button:hover, #projectContainer button:hover {\n    background-color: #bbbbbb3b;\n}\n\n#sideBar .buttons .highlight-button, #projectContainer .highlight-button  {\n    background-color: #bbbbbb54;\n}\n\n#sideBar .buttons .highlight-button:hover, #projectContainer .highlight-button:hover {\n    background-color: #bbbbbb54;\n}\n\n\n\n#content {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    overflow-y: auto;\n    height: calc(100vh - 55px);\n    width: calc(100vw - 25vw);\n\n    color: white;\n    margin-left: 25vw;\n    gap: 10px;\n    padding: 80px;\n    padding-top: 15px;\n}\n\n#content .contentHeader {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    border-bottom: 1px solid white;\n}\n\n.pageHeader {\n    align-self: flex-start;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    margin-bottom: 0px;\n}\n\n#content .taskContainer .taskList {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 30px;\n}\n\n.mainTaskContainer {\n    width: 100%;\n    border-top: 2px solid white;\n}\n\n.newTaskButton {\n    height: 50px;\n    width: 100%;\n}\n\n.newTask {\n    display: flex;\n    flex-direction: row;\n    height: 40px;\n    width: 100%;\n    background-color: #d4d4d812;\n    vertical-align: middle;\n}\n\n.newTaskContent {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding-right: 30px;\n    padding-left: 15px;\n}\n\n.newTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.newTask input[type=checkbox] {\n    margin-left: 10px;\n    width: 20px;\n}\n\n.newTaskForm {\n    display: none;\n    border: 1px solid black;\n    background-color: #d4d4d812;\n}\n\n.formElement {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n}\n\n.formElement input {\n    height: 40px;\n    font-size: 17px;\n    font-family: 'Open Sans';\n}\n\n.formElement input[type=text] {\n    width: 70%;\n}\n\n.formElement input[type=date] {\n    width: 30%;\n}\n\n.formElement button {\n    height: 25px;\n    width: 50%;\n}\n \n.newTaskForm .formContainer {\n    display: flex;\n    flex-direction: column;\n    color: white;\n}\n\n\n.subTaskForm {\n    display: none;\n}\n\n.subTaskForm .subTaskFormContainer {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    margin-left: 35px;\n    color: white;\n}\n\n.subTaskFormContainer input[type=text] {\n    width: 60%;\n    font-size: 15px;\n}\n\n.subTaskFormContainer button {\n    width: 20%;\n}\n\n.subTaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-left: 35px;\n}\n\n.subTaskContainer .subTask {\n    display: flex;\n    flex-direction: row;\n    height: 30px;\n    background-color: #d4d4d812;\n    border-top: 1px solid #ffffff75;\n}\n\n.subTask input {\n    background-color: #ffffff00;\n    border: none;\n    color: white;\n    font-size: 15px;\n    font-family: 'Open Sans';\n}\n\n.subTask input[type=checkbox] {\n    margin-left: 10px;\n    margin-right: 20px;\n    width: 15px;\n}\n\n.subTaskContainer .subTaskDone input {\n    text-decoration: line-through;\n}\n\n\n\n\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    padding-top: 20px;\n    border-top: 1px solid rgb(212, 212, 212);\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n}\n\n\n.projectHeader {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: white;\n}\n\n.projectHeader h4, button {\n    margin: 0;\n}\n\n.projectForm {\n    display: none;\n    flex-direction: column;\n    padding-top: 10px;\n}\n\n\n#projectContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    padding-top: 10px;\n}\n\n#projectContainer .newProject {\n    height: 40px;\n}\n\n\n\n\n\n#custom-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 5px;\n}\n  \n#custom-menu ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n  \n#custom-menu li {\n    cursor: pointer;\n    padding: 5px;\n}\n  \n#custom-menu li:hover {\n    background-color: #f0f0f0;\n}"],sourceRoot:""}]);const l=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var l=0;l<this.length;l++){var A=this[l][0];null!=A&&(s[A]=!0)}for(var r=0;r<n.length;r++){var c=[].concat(n[r]);o&&s[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},s=[],l=0;l<n.length;l++){var A=n[l],r=o.base?A[0]+o.base:A[0],c=i[r]||0,d="".concat(r," ").concat(c);i[r]=c+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=l,e.splice(l,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var l=t(i[s]);e[l].references--}for(var A=o(n,a),r=0;r<i.length;r++){var c=t(i[r]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{nf:()=>F,j0:()=>N,el:()=>D,tJ:()=>T,GI:()=>U,kv:()=>Z,dT:()=>q,MT:()=>E,X1:()=>j,Ts:()=>L,K9:()=>O,z2:()=>Y,ot:()=>S});var n=t(379),e=t.n(n),a=t(795),i=t.n(a),s=t(569),l=t.n(s),A=t(565),r=t.n(A),c=t(216),d=t.n(c),p=t(589),u=t.n(p),m=t(602),f={};f.styleTagTransform=u(),f.setAttributes=r(),f.insert=l().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=d(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const b=n=>{j.reset(),j.style.display="none",Y.reset(),Y.style.display="none",S.textContent="",T.style.display="flex",T.textContent="",function(n){T.textContent="";let e=document.createElement("h1");e.textContent=n.name,e.classList.add("pageHeader"),T.append(e)}(n),C(n)};function C(n){E.textContent="",S.textContent="";for(let e=0;e<n.tasks.length;e++){let t=n.tasks[e],o=n.id,a=document.createElement("div");a.setAttribute("data-index",e),a.classList.add("mainTaskContainer");let i=document.createElement("div");i.classList.add("newTask");let s=document.createElement("div");s.classList.add("subTaskContainer");let l=document.createElement("input");l.type="checkbox";let A=document.createElement("div");A.classList.add("newTaskContent");let r=document.createElement("input");r.type="text",r.value=t.mainTaskData.mainTaskName;let c=document.createElement("input");c.type="date",c.value=t.mainTaskData.mainTaskDate,i.append(l),A.append(r),A.append(c),i.append(A),a.append(i),a.append(s),c.addEventListener("change",(function(){t.mainTaskData.mainTaskDate=c.value,localStorage.setItem("myProjects",JSON.stringify(Z))})),g(a,o),S.append(a);for(let n=0;n<t.subTasks.length;n++){let e=document.createElement("div");e.classList.add("subTask"),e.setAttribute("data-index",t.subTasks[n].id);let o=document.createElement("input");o.type="checkbox",e.append(o);let a=document.createElement("input");a.type="text",a.value=t.subTasks[n].name,e.append(a),s.append(e),t.subTasks[n].isChecked?(o.checked=!0,e.classList.add("subTaskDone")):(o.checked=!1,e.classList.remove("subTaskDone")),o.addEventListener("change",(function(){o.checked?(e.classList.add("subTaskDone"),t.subTasks[n].isChecked=!0,localStorage.setItem("myProjects",JSON.stringify(Z))):(e.classList.remove("subTaskDone"),t.subTasks[n].isChecked=!1,localStorage.setItem("myProjects",JSON.stringify(Z)))}))}l.addEventListener("change",(function(){l.checked&&(n.tasks.splice(e,1),b(n),localStorage.setItem("myProjects",JSON.stringify(Z)))}))}let e=document.createElement("button");e.textContent="new button!",e.onclick=function(){!function(n,e){var t=n.getBoundingClientRect(),o=t.top,a=t.left;j.style.top=o+"px",j.style.left=a+"px",j.style.display="block",j.style.width=getComputedStyle(n).width,n.style.display="none",window.addEventListener("resize",(function(){n.style.display="block",j.style.width=getComputedStyle(n).width,n.style.display="none"})),j.onsubmit=function(t){console.log("submit new task clicked"),function(n){let e={id:n.tasks.length,mainTaskData:{mainTaskName:document.getElementById("taskName").value,mainTaskDate:document.getElementById("taskDate").value},subTasks:[]};n.tasks.push(e),localStorage.setItem("myProjects",JSON.stringify(Z)),b(n)}(e),n.style.display="block",j.reset(),j.style.display="none",t.preventDefault()},D.onclick=function(e){console.log("cancel task clicked"),n.style.display="block",j.reset(),j.style.display="none",e.preventDefault()}}(e,n)},e.classList.add("newTaskButton"),E.append(e)}function g(n,e){n.addEventListener("contextmenu",(function(t){t.preventDefault(),U.style.display="block",U.style.left=`${t.pageX}px`,U.style.top=`${t.pageY}px`;const o=U.querySelector("#menu-item-1"),a=U.querySelector("#menu-item-2");o.onclick=function(){(function(n,e){n.insertAdjacentElement("afterend",Y),Y.style.display="block",Y.onsubmit=function(t){console.log("submit subtask clicked"),function(n,e){let t=n.getAttribute("data-index");if("none"==e){let n={id:q[t].subTasks.length,name:document.getElementById("subTaskName").value,isChecked:!1};q[t].subTasks.push(n),w(),localStorage.setItem("myTasks",JSON.stringify(q))}else{console.log("project subtask???/");let n={id:Z[e].tasks[t].subTasks.length,name:document.getElementById("subTaskName").value,isChecked:!1};Z[e].tasks[t].subTasks.push(n),localStorage.setItem("myProjects",JSON.stringify(Z));let o=Z[e];b(o)}Y.reset(),Y.style.display="none"}(n,e),t.preventDefault()},N.onclick=function(n){console.log("cancel task clicked"),Y.reset(),Y.style.display="none",n.preventDefault()}})(n,e),U.style.display="none"},a.onclick=function(){if(q.includes(task))q.splice(task.id,1),localStorage.setItem("myTasks",JSON.stringify(q)),w();else{let n=task.id,e=Z.find((n=>n.tasks&&n.tasks.includes(task)));n>-1&&Z[e.id].tasks.splice(n,1),C(e)}U.style.display="none"},document.body.appendChild(U)})),document.body.onclick=n=>{console.log("clicked"),U.contains(n.target)||(console.log("clicked outside task"),U.style.display="none")}}let y;function h(){let n=document.querySelectorAll(".sideBarButton");n.forEach((e=>{e.onclick=()=>{n=document.querySelectorAll(".sideBarButton"),n.forEach((n=>n.classList.remove("highlight-button"))),e.classList.add("highlight-button")}}))}function B(){L.textContent="";for(let n=0;n<Z.length;n++){Z[n].id=n;let e=document.createElement("button");e.classList.add("newProject"),e.classList.add("sideBarButton");let t=document.createElement("button");e.textContent=Z[n].name,e.append(t),L.append(e),e.addEventListener("click",(function(e){t.contains(e.target)||(b(Z[n]),y=n)})),t.addEventListener("click",(function(){Z.splice(n,1),console.log("deleting task "+n),B(),y==n&&w()}))}}const k=()=>{j.reset(),j.style.display="none",Y.reset(),Y.style.display="none",S.textContent="",T.style.display="flex",T.textContent="";let n=document.createElement("h1");n.textContent="Today",n.classList.add("pageHeader"),T.append(n);let e=new Date;console.log("todayDate is "+e);for(let n=0;n<q.length;n++){let t=q[n],o=new Date(t.mainTaskData.mainTaskDate);e.getFullYear()===o.getFullYear()&&e.getMonth()===o.getMonth()&&e.getDate()===o.getDate()&&I(n,"today")}},x=()=>{j.reset(),j.style.display="none",Y.reset(),Y.style.display="none",S.textContent="",T.style.display="flex",T.textContent="";let n=document.createElement("h1");n.textContent="This Week",n.classList.add("pageHeader"),T.append(n);let e=new Date,t=e.getDay(),o=new Date(e);o.setDate(e.getDate()-t+1),o.setHours(0,0,0,0);let a=new Date(e);a.setDate(e.getDate()+(6-t)+1),a.setHours(23,59,59,999),console.log("todayDate is "+e),console.log("week start is "+o+" and week end is "+a);for(let n=0;n<q.length;n++){let e=q[n],t=new Date(e.mainTaskData.mainTaskDate);t>=o&&t<=a&&I(n,"week")}};function I(n,e){let t=q[n],o=document.createElement("div");o.setAttribute("data-index",n),o.classList.add("mainTaskContainer");let a=document.createElement("div");a.classList.add("newTask");let i=document.createElement("input");i.type="checkbox",a.append(i);let s=document.createElement("div");s.classList.add("newTaskContent");let l=document.createElement("input");l.type="text",l.value=t.mainTaskData.mainTaskName,s.append(l);let A=document.createElement("input");A.type="date",A.value=t.mainTaskData.mainTaskDate,s.append(A),A.addEventListener("change",(function(){t.mainTaskData.mainTaskDate=A.value,localStorage.setItem("myTasks",JSON.stringify(q))})),a.append(s);let r=document.createElement("div");r.classList.add("subTaskContainer"),o.append(a),o.append(r),g(o,"none"),S.append(o);for(let n=0;n<t.subTasks.length;n++){let e=document.createElement("div");e.classList.add("subTask"),e.setAttribute("data-index",t.subTasks[n].id);let o=document.createElement("input");o.type="checkbox",e.append(o);let a=document.createElement("input");a.type="text",a.value=t.subTasks[n].name,e.append(a),r.append(e),t.subTasks[n].isChecked?(o.checked=!0,e.classList.add("subTaskDone")):(o.checked=!1,e.classList.remove("subTaskDone")),o.addEventListener("change",(function(){o.checked?(e.classList.add("subTaskDone"),t.subTasks[n].isChecked=!0,localStorage.setItem("myTasks",JSON.stringify(q))):(e.classList.remove("subTaskDone"),t.subTasks[n].isChecked=!1,localStorage.setItem("myTasks",JSON.stringify(q)))}))}i.addEventListener("change",(function(){i.checked&&(console.log("checked task with id "+n+" and data-index "+o.getAttribute("data-index")),q.splice(n,1),"inbox"==e?w():"today"==e?k():"week"==e&&x(),localStorage.setItem("myTasks",JSON.stringify(q)))})),console.log(q[n])}const w=()=>{j.reset(),j.style.display="none",Y.reset(),Y.style.display="none",T.style.display="flex",T.textContent="",function(){let n=document.createElement("h1");n.textContent="Inbox",n.classList.add("pageHeader"),T.append(n)}(),function(){E.textContent="",S.textContent="";for(let n=0;n<q.length;n++)I(n,"inbox");let n=document.createElement("button");n.textContent="new button!",n.onclick=function(){!function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left;j.style.top=t+"px",j.style.left=o+"px",j.style.display="block",j.style.width=getComputedStyle(n).width,n.style.display="none",window.addEventListener("resize",(function(){n.style.display="block",j.style.width=getComputedStyle(n).width,n.style.display="none"})),j.onsubmit=function(e){console.log("submit new task clicked"),function(n){let e={id:q.length,mainTaskData:{mainTaskName:document.getElementById("taskName").value,mainTaskDate:document.getElementById("taskDate").value},subTasks:[]};q.push(e),localStorage.setItem("myTasks",JSON.stringify(q)),document.getElementById("taskName").value="",j.style.display="none",n.style.display="block",w(),console.log(q)}(n),e.preventDefault()},D.onclick=function(e){console.log("cancel task clicked"),n.style.display="block",j.reset(),j.style.display="none",e.preventDefault()}}(n)},n.classList.add("newTaskButton"),E.append(n)}()};function v(n){O.reset(),O.style.display="none",n.preventDefault()}document.querySelector("#content");const T=document.querySelector(".contentHeader"),E=(document.querySelector(".taskContainer"),document.querySelector(".newTaskButtonContainer")),S=document.querySelector(".taskList"),L=document.getElementById("projectContainer"),j=document.querySelector(".newTaskForm"),D=(document.getElementById("submitNewTask"),document.getElementById("cancelTask")),Y=document.querySelector(".subTaskForm"),N=(document.getElementById("submitSubTask"),document.getElementById("cancelSubTask")),O=document.querySelector(".projectForm"),F=(document.getElementById("addProject"),document.getElementById("cancelProject")),U=document.getElementById("custom-menu"),q=[],Z=[];document.querySelector(".inbox").addEventListener("click",w),document.querySelector(".today").addEventListener("click",k),document.querySelector(".week").addEventListener("click",x),document.querySelector(".newProject").onclick=function(){O.style.display="flex",O.onsubmit=function(n){!function(){let n={id:Z.length,name:document.getElementById("projectName").value,tasks:[]};Z.push(n),h(),B()}(),O.reset(),n.preventDefault()},F.onclick=v},h(),console.log("works lol")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,